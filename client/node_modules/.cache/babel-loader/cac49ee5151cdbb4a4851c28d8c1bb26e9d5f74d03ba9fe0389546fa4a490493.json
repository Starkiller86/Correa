{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beto_\\\\Downloads\\\\Correa\\\\client\\\\src\\\\components\\\\ListaCuentas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport Cuenta from './cuenta';\n\n/**\r\n * Lista de cuentas activas por mesa:\r\n * - Agrupa por mesa soportando 'table' (nuevo) y 'mesa' (legacy).\r\n * - Soporta arrays 'items' (nuevo) y 'pedidos' (legacy).\r\n * - Calcula total considerando 'quantity' si existe (bar).\r\n * - Usa keys robustas en todos los map para evitar warnings.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListaCuentas = ({\n  orders = [],\n  onCerrarMesa\n}) => {\n  _s();\n  // 1) Agrupar por mesa (table || mesa)\n  const byTable = useMemo(() => {\n    const map = new Map();\n    for (const o of orders) {\n      var _o$table;\n      const mesa = (_o$table = o.table) !== null && _o$table !== void 0 ? _o$table : o.mesa;\n      if (mesa == null) continue;\n      const k = String(mesa);\n      if (!map.has(k)) map.set(k, []);\n      map.get(k).push(o);\n    }\n    return map;\n  }, [orders]);\n\n  // 2) Listado de mesas ordenado asc\n  const mesas = useMemo(() => Array.from(byTable.keys()).sort((a, b) => Number(a) - Number(b)), [byTable]);\n\n  // 3) Helpers compatibles para items/pedidos\n  const getPedidosMesa = mesaKey => {\n    const ords = byTable.get(String(mesaKey)) || [];\n    return ords.flatMap(o => o.items || o.pedidos || []);\n  };\n  const getTotalMesa = mesaKey => {\n    const items = getPedidosMesa(mesaKey).filter(Boolean);\n    const total = items.reduce((sum, it) => {\n      const price = Number(it.price || 0);\n      const qty = Number(it.quantity || 1); // ✅ considera quantity si viene del bar\n      return sum + price * qty;\n    }, 0);\n    return total.toFixed(2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lista-cuentas\",\n    children: [mesas.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay cuentas activas.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this), mesas.map(mesaKey => {\n      const pedidos = getPedidosMesa(mesaKey);\n      const total = getTotalMesa(mesaKey);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cuenta-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"titulo-mesa\",\n          children: [\"Mesa \", mesaKey]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Cuenta, {\n          mesa: mesaKey,\n          pedidos: pedidos,\n          total: total,\n          onCerrarCuenta: () => onCerrarMesa === null || onCerrarMesa === void 0 ? void 0 : onCerrarMesa(Number(mesaKey))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, `cuenta-mesa-${mesaKey}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(ListaCuentas, \"kH6NxQAQuXGI3Xyiqc+ZLMXmqWA=\");\n_c = ListaCuentas;\nexport default ListaCuentas;\nvar _c;\n$RefreshReg$(_c, \"ListaCuentas\");","map":{"version":3,"names":["React","useMemo","Cuenta","jsxDEV","_jsxDEV","ListaCuentas","orders","onCerrarMesa","_s","byTable","map","Map","o","_o$table","mesa","table","k","String","has","set","get","push","mesas","Array","from","keys","sort","a","b","Number","getPedidosMesa","mesaKey","ords","flatMap","items","pedidos","getTotalMesa","filter","Boolean","total","reduce","sum","it","price","qty","quantity","toFixed","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","onCerrarCuenta","_c","$RefreshReg$"],"sources":["C:/Users/beto_/Downloads/Correa/client/src/components/ListaCuentas.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\r\nimport Cuenta from './cuenta';\r\n\r\n/**\r\n * Lista de cuentas activas por mesa:\r\n * - Agrupa por mesa soportando 'table' (nuevo) y 'mesa' (legacy).\r\n * - Soporta arrays 'items' (nuevo) y 'pedidos' (legacy).\r\n * - Calcula total considerando 'quantity' si existe (bar).\r\n * - Usa keys robustas en todos los map para evitar warnings.\r\n */\r\nconst ListaCuentas = ({ orders = [], onCerrarMesa }) => {\r\n  // 1) Agrupar por mesa (table || mesa)\r\n  const byTable = useMemo(() => {\r\n    const map = new Map();\r\n    for (const o of orders) {\r\n      const mesa = (o.table ?? o.mesa);\r\n      if (mesa == null) continue;\r\n      const k = String(mesa);\r\n      if (!map.has(k)) map.set(k, []);\r\n      map.get(k).push(o);\r\n    }\r\n    return map;\r\n  }, [orders]);\r\n\r\n  // 2) Listado de mesas ordenado asc\r\n  const mesas = useMemo(\r\n    () => Array.from(byTable.keys()).sort((a, b) => Number(a) - Number(b)),\r\n    [byTable]\r\n  );\r\n\r\n  // 3) Helpers compatibles para items/pedidos\r\n  const getPedidosMesa = (mesaKey) => {\r\n    const ords = byTable.get(String(mesaKey)) || [];\r\n    return ords.flatMap(o => o.items || o.pedidos || []);\r\n  };\r\n\r\n  const getTotalMesa = (mesaKey) => {\r\n    const items = getPedidosMesa(mesaKey).filter(Boolean);\r\n    const total = items.reduce((sum, it) => {\r\n      const price = Number(it.price || 0);\r\n      const qty = Number(it.quantity || 1);     // ✅ considera quantity si viene del bar\r\n      return sum + price * qty;\r\n    }, 0);\r\n    return total.toFixed(2);\r\n  };\r\n\r\n  return (\r\n    <div className=\"lista-cuentas\">\r\n      {mesas.length === 0 && <p>No hay cuentas activas.</p>}\r\n\r\n      {mesas.map((mesaKey) => {\r\n        const pedidos = getPedidosMesa(mesaKey);\r\n        const total = getTotalMesa(mesaKey);\r\n\r\n        return (\r\n          <div key={`cuenta-mesa-${mesaKey}`} className=\"cuenta-wrapper\">{/* ✅ key robusta */}\r\n            <h2 className=\"titulo-mesa\">Mesa {mesaKey}</h2>\r\n            <Cuenta\r\n              mesa={mesaKey}\r\n              pedidos={pedidos}\r\n              total={total}\r\n              onCerrarCuenta={() => onCerrarMesa?.(Number(mesaKey))}\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListaCuentas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}