{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\coorrea\\\\Correa\\\\client\\\\src\\\\pages\\\\ClientInterface.jsx\",\n  _s = $RefreshSig$();\n// src/pages/ClientInterface.jsx\nimport React, { useState, useEffect } from 'react';\nimport TableSelector from '../components/TableroSelector';\nimport MenuItem from '../components/MenuItem';\nimport Cart from '../components/cart';\nimport ListaCuentas from '../components/ListaCuentas';\n\n// ✅ Usa los mismos helpers REST/WS\nimport { fetchMenuItems, placeNewOrder, initializeSocketConnection } from '../services/socket';\nimport { guardarCuentaEnJSON, eliminarCuentaDeJSON, cargarCuentasDesdeJSON } from '../services/cuentaService';\n\n// ✅ Dedupe por id (último visto gana)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dedupById = arr => Array.from(new Map((arr || []).map(o => [o.id, o])).values());\nexport default function ClientInterface() {\n  _s();\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [cart, setCart] = useState([]);\n  const [menu, setMenu] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [orders, setOrders] = useState([]);\n  const [showTotalModal, setShowTotalModal] = useState(false);\n\n  // 🟢 Carga inicial de menú + hidratación de órdenes\n  useEffect(() => {\n    const loadMenu = () => fetchMenuItems().then(data => {\n      // ⚠️ Si en db.json hay ids duplicados, esto evita el warning\n      //    (aún así corrige ids en db.json como te indiqué)\n      const unique = dedupById(data);\n      setMenu(unique);\n    }).catch(console.error);\n    loadMenu();\n\n    // Leer órdenes previas desde localStorage\n    const saved = localStorage.getItem('orders');\n    if (saved) {\n      try {\n        setOrders(JSON.parse(saved));\n      } catch {}\n    }\n\n    // Cuentas guardadas en JSON Server (colección 'cuentas' si la usas)\n    cargarCuentasDesdeJSON().then((cuentas = []) => {\n      setOrders(prev => {\n        const merged = dedupById([...prev, ...cuentas]);\n        localStorage.setItem('orders', JSON.stringify(merged));\n        return merged;\n      });\n    });\n\n    // 🛰️ WS: Órdenes + aviso de menú actualizado\n    initializeSocketConnection(payload => {\n      if (payload === '__MENU_UPDATED__') {\n        // Si el admin cambió el menú, refrescamos\n        loadMenu();\n        return;\n      }\n      const incoming = Array.isArray(payload) ? payload : [];\n      if (!incoming.length) return;\n      setOrders(prev => {\n        const merged = dedupById([...prev, ...incoming]);\n        localStorage.setItem('orders', JSON.stringify(merged));\n        return merged;\n      });\n    });\n  }, []);\n\n  // Persistir órdenes en LS cada vez que cambien\n  useEffect(() => {\n    localStorage.setItem('orders', JSON.stringify(orders));\n  }, [orders]);\n\n  // 🛒 Añadir al carrito (key interna única para render del carrito)\n  const addToCart = (item, excludedIngredients = []) => {\n    setCart(prev => [...prev, {\n      ...item,\n      excludedIngredients,\n      id: Date.now() + Math.random().toString(36).slice(2, 9)\n    }]);\n  };\n  const removeFromCart = itemId => {\n    setCart(prev => prev.filter(i => i.id !== itemId));\n  };\n\n  // 🚀 Enviar pedido\n  const placeOrder = async () => {\n    if (!selectedTable || cart.length === 0) return;\n    const order = {\n      id: `${Date.now()}`,\n      // ✅ dejar que JSON Server autogenere también es válido, pero esto es consistente\n      table: selectedTable,\n      items: cart,\n      timestamp: new Date().toISOString(),\n      status: 'pending',\n      // ✅ importante para que Cocina lo muestre\n      source: 'kitchen'\n    };\n\n    // Guarda por REST y luego notifica por WS\n    const saved = await placeNewOrder(order);\n    await guardarCuentaEnJSON(saved);\n    setOrders(prev => {\n      const merged = dedupById([...prev, saved]);\n      localStorage.setItem('orders', JSON.stringify(merged));\n      return merged;\n    });\n    setCart([]);\n    alert('¡Pedido enviado!');\n  };\n\n  // ❌ Cerrar cuenta de una mesa (borra de JSON y estado)\n  const closeTableAccount = async mesa => {\n    const ok = window.confirm(`¿Cerrar cuenta de la mesa ${mesa}?`);\n    if (!ok) return;\n    const mesaOrders = orders.filter(o => o.table === mesa);\n    for (const order of mesaOrders) await eliminarCuentaDeJSON(order.id);\n    const updated = orders.filter(o => o.table !== mesa);\n    setOrders(updated);\n    localStorage.setItem('orders', JSON.stringify(updated));\n    alert(`Cuenta de mesa ${mesa} cerrada.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Men\\xFA del Restaurante\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar platillo o bebida...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value),\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableSelector, {\n      tables: [1, 2, 3, 4, 5, 6, 7, 8, 8, 10, 11, 12, 13, 14, 15] // ⚠️ si hay algún duplicado aquí, igual usamos key robusta\n      ,\n      selectedTable: selectedTable,\n      onSelect: setSelectedTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interface-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-container\",\n        children: menu.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()) || (item.category || '').toLowerCase().includes(searchTerm.toLowerCase())).map((item, idx) =>\n        /*#__PURE__*/\n        // 🛡️ key robusta para evitar el warning si se cuela un id duplicado desde el backend\n        _jsxDEV(MenuItem, {\n          item: item,\n          onAdd: addToCart\n        }, `${item.id}-${item.name}-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-container\",\n        children: [/*#__PURE__*/_jsxDEV(Cart, {\n          items: cart,\n          onRemove: removeFromCart,\n          onPlaceOrder: placeOrder,\n          isTableSelected: !!selectedTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-total-button\",\n          onClick: () => setShowTotalModal(true),\n          children: \"Ver Cuentas Activas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), showTotalModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(ListaCuentas, {\n          orders: orders,\n          onCerrarMesa: closeTableAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cerrar-btn\",\n          onClick: () => setShowTotalModal(false),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientInterface, \"avbTZSCAxXwT0QfeSelUtOm3yQQ=\");\n_c = ClientInterface;\nvar _c;\n$RefreshReg$(_c, \"ClientInterface\");","map":{"version":3,"names":["React","useState","useEffect","TableSelector","MenuItem","Cart","ListaCuentas","fetchMenuItems","placeNewOrder","initializeSocketConnection","guardarCuentaEnJSON","eliminarCuentaDeJSON","cargarCuentasDesdeJSON","jsxDEV","_jsxDEV","dedupById","arr","Array","from","Map","map","o","id","values","ClientInterface","_s","selectedTable","setSelectedTable","cart","setCart","menu","setMenu","searchTerm","setSearchTerm","orders","setOrders","showTotalModal","setShowTotalModal","loadMenu","then","data","unique","catch","console","error","saved","localStorage","getItem","JSON","parse","cuentas","prev","merged","setItem","stringify","payload","incoming","isArray","length","addToCart","item","excludedIngredients","Date","now","Math","random","toString","slice","removeFromCart","itemId","filter","i","placeOrder","order","table","items","timestamp","toISOString","status","source","alert","closeTableAccount","mesa","ok","window","confirm","mesaOrders","updated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","tables","onSelect","name","toLowerCase","includes","category","idx","onAdd","onRemove","onPlaceOrder","isTableSelected","onClick","onCerrarMesa","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/coorrea/Correa/client/src/pages/ClientInterface.jsx"],"sourcesContent":["// src/pages/ClientInterface.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport TableSelector from '../components/TableroSelector';\r\nimport MenuItem from '../components/MenuItem';\r\nimport Cart from '../components/cart';\r\nimport ListaCuentas from '../components/ListaCuentas';\r\n\r\n// ✅ Usa los mismos helpers REST/WS\r\nimport { fetchMenuItems, placeNewOrder, initializeSocketConnection } from '../services/socket';\r\nimport { guardarCuentaEnJSON, eliminarCuentaDeJSON, cargarCuentasDesdeJSON } from '../services/cuentaService';\r\n\r\n// ✅ Dedupe por id (último visto gana)\r\nconst dedupById = (arr) => Array.from(new Map((arr || []).map(o => [o.id, o])).values());\r\n\r\nexport default function ClientInterface() {\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n  const [cart, setCart] = useState([]);\r\n  const [menu, setMenu] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [orders, setOrders] = useState([]);\r\n  const [showTotalModal, setShowTotalModal] = useState(false);\r\n\r\n  // 🟢 Carga inicial de menú + hidratación de órdenes\r\n  useEffect(() => {\r\n    const loadMenu = () =>\r\n      fetchMenuItems()\r\n        .then((data) => {\r\n          // ⚠️ Si en db.json hay ids duplicados, esto evita el warning\r\n          //    (aún así corrige ids en db.json como te indiqué)\r\n          const unique = dedupById(data);\r\n          setMenu(unique);\r\n        })\r\n        .catch(console.error);\r\n\r\n    loadMenu();\r\n\r\n    // Leer órdenes previas desde localStorage\r\n    const saved = localStorage.getItem('orders');\r\n    if (saved) {\r\n      try { setOrders(JSON.parse(saved)); } catch {}\r\n    }\r\n\r\n    // Cuentas guardadas en JSON Server (colección 'cuentas' si la usas)\r\n    cargarCuentasDesdeJSON().then((cuentas = []) => {\r\n      setOrders(prev => {\r\n        const merged = dedupById([...prev, ...cuentas]);\r\n        localStorage.setItem('orders', JSON.stringify(merged));\r\n        return merged;\r\n      });\r\n    });\r\n\r\n    // 🛰️ WS: Órdenes + aviso de menú actualizado\r\n    initializeSocketConnection((payload) => {\r\n      if (payload === '__MENU_UPDATED__') {\r\n        // Si el admin cambió el menú, refrescamos\r\n        loadMenu();\r\n        return;\r\n      }\r\n\r\n      const incoming = Array.isArray(payload) ? payload : [];\r\n      if (!incoming.length) return;\r\n\r\n      setOrders(prev => {\r\n        const merged = dedupById([...prev, ...incoming]);\r\n        localStorage.setItem('orders', JSON.stringify(merged));\r\n        return merged;\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  // Persistir órdenes en LS cada vez que cambien\r\n  useEffect(() => {\r\n    localStorage.setItem('orders', JSON.stringify(orders));\r\n  }, [orders]);\r\n\r\n  // 🛒 Añadir al carrito (key interna única para render del carrito)\r\n  const addToCart = (item, excludedIngredients = []) => {\r\n    setCart(prev => [\r\n      ...prev,\r\n      { ...item, excludedIngredients, id: Date.now() + Math.random().toString(36).slice(2, 9) }\r\n    ]);\r\n  };\r\n\r\n  const removeFromCart = (itemId) => {\r\n    setCart(prev => prev.filter(i => i.id !== itemId));\r\n  };\r\n\r\n  // 🚀 Enviar pedido\r\n  const placeOrder = async () => {\r\n    if (!selectedTable || cart.length === 0) return;\r\n\r\n    const order = {\r\n      id: `${Date.now()}`,            // ✅ dejar que JSON Server autogenere también es válido, pero esto es consistente\r\n      table: selectedTable,\r\n      items: cart,\r\n      timestamp: new Date().toISOString(),\r\n      status: 'pending',              // ✅ importante para que Cocina lo muestre\r\n      source: 'kitchen'\r\n    };\r\n\r\n    // Guarda por REST y luego notifica por WS\r\n    const saved = await placeNewOrder(order);\r\n    await guardarCuentaEnJSON(saved);\r\n\r\n    setOrders(prev => {\r\n      const merged = dedupById([...prev, saved]);\r\n      localStorage.setItem('orders', JSON.stringify(merged));\r\n      return merged;\r\n    });\r\n\r\n    setCart([]);\r\n    alert('¡Pedido enviado!');\r\n  };\r\n\r\n  // ❌ Cerrar cuenta de una mesa (borra de JSON y estado)\r\n  const closeTableAccount = async (mesa) => {\r\n    const ok = window.confirm(`¿Cerrar cuenta de la mesa ${mesa}?`);\r\n    if (!ok) return;\r\n\r\n    const mesaOrders = orders.filter(o => o.table === mesa);\r\n    for (const order of mesaOrders) await eliminarCuentaDeJSON(order.id);\r\n\r\n    const updated = orders.filter(o => o.table !== mesa);\r\n    setOrders(updated);\r\n    localStorage.setItem('orders', JSON.stringify(updated));\r\n    alert(`Cuenta de mesa ${mesa} cerrada.`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"client-interface\">\r\n      <h1>Menú del Restaurante</h1>\r\n\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Buscar platillo o bebida...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n        className=\"search-input\"\r\n      />\r\n\r\n      <TableSelector\r\n        tables={[1,2,3,4,5,6,7,8,8,10,11,12,13,14,15]} // ⚠️ si hay algún duplicado aquí, igual usamos key robusta\r\n        selectedTable={selectedTable}\r\n        onSelect={setSelectedTable}\r\n      />\r\n\r\n      <div className=\"interface-content\">\r\n        <div className=\"menu-container\">\r\n          {menu\r\n            .filter(item =>\r\n              item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n              (item.category || '').toLowerCase().includes(searchTerm.toLowerCase())\r\n            )\r\n            .map((item, idx) => (\r\n              // 🛡️ key robusta para evitar el warning si se cuela un id duplicado desde el backend\r\n              <MenuItem key={`${item.id}-${item.name}-${idx}`} item={item} onAdd={addToCart} />\r\n            ))}\r\n        </div>\r\n\r\n        <div className=\"cart-container\">\r\n          <Cart\r\n            items={cart}\r\n            onRemove={removeFromCart}\r\n            onPlaceOrder={placeOrder}\r\n            isTableSelected={!!selectedTable}\r\n          />\r\n          <button className=\"show-total-button\" onClick={() => setShowTotalModal(true)}>\r\n            Ver Cuentas Activas\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {showTotalModal && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <ListaCuentas\r\n              orders={orders}\r\n              onCerrarMesa={closeTableAccount}\r\n            />\r\n            <button className=\"cerrar-btn\" onClick={() => setShowTotalModal(false)}>Cerrar</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}