{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\beto_\\\\Downloads\\\\Correa\\\\client\\\\src\\\\components\\\\TableroSelector.jsx\";\nimport React from 'react';\n\n/**\r\n * Selector de mesa:\r\n * - Permite seleccionar/deseleccionar una mesa.\r\n * - Usa keys robustas tipo \"mesa-<n>\" para evitar warnings por claves duplicadas.\r\n * - Tolera arrays con números o strings, y aunque vengan repetidos no crashea (keys únicas).\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TableroSelector = ({\n  tables = [],\n  selectedTable,\n  onSelect\n}) => {\n  const handleSelect = table => {\n    if (selectedTable === table) {\n      onSelect(null); // Deselecciona si ya está seleccionada\n    } else {\n      onSelect(table); // Selecciona nueva mesa\n    }\n  };\n\n  // Normaliza la lista por si vienen duplicados (Set) y la ordena\n  const mesasUnicas = Array.from(new Set(tables)).sort((a, b) => Number(a) - Number(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-selector\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Seleccione Mesa:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-buttons\",\n      children: mesasUnicas.map(table => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: String(selectedTable) === String(table) ? 'selected' : '',\n        onClick: () => handleSelect(table),\n        type: \"button\",\n        children: [\"Mesa \", table]\n      }, `mesa-${table}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = TableroSelector;\nexport default TableroSelector;\nvar _c;\n$RefreshReg$(_c, \"TableroSelector\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TableroSelector","tables","selectedTable","onSelect","handleSelect","table","mesasUnicas","Array","from","Set","sort","a","b","Number","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","String","onClick","type","_c","$RefreshReg$"],"sources":["C:/Users/beto_/Downloads/Correa/client/src/components/TableroSelector.jsx"],"sourcesContent":["import React from 'react';\r\n\r\n/**\r\n * Selector de mesa:\r\n * - Permite seleccionar/deseleccionar una mesa.\r\n * - Usa keys robustas tipo \"mesa-<n>\" para evitar warnings por claves duplicadas.\r\n * - Tolera arrays con números o strings, y aunque vengan repetidos no crashea (keys únicas).\r\n */\r\nconst TableroSelector = ({ tables = [], selectedTable, onSelect }) => {\r\n  const handleSelect = (table) => {\r\n    if (selectedTable === table) {\r\n      onSelect(null);       // Deselecciona si ya está seleccionada\r\n    } else {\r\n      onSelect(table);      // Selecciona nueva mesa\r\n    }\r\n  };\r\n\r\n  // Normaliza la lista por si vienen duplicados (Set) y la ordena\r\n  const mesasUnicas = Array.from(new Set(tables)).sort((a, b) => Number(a) - Number(b));\r\n\r\n  return (\r\n    <div className=\"table-selector\">\r\n      <h2>Seleccione Mesa:</h2>\r\n      <div className=\"table-buttons\">\r\n        {mesasUnicas.map((table) => (\r\n          <button\r\n            key={`mesa-${table}`}                                \r\n            className={String(selectedTable) === String(table) ? 'selected' : ''}\r\n            onClick={() => handleSelect(table)}\r\n            type=\"button\"\r\n          >\r\n            Mesa {table}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableroSelector;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AALA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,eAAe,GAAGA,CAAC;EAAEC,MAAM,GAAG,EAAE;EAAEC,aAAa;EAAEC;AAAS,CAAC,KAAK;EACpE,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,IAAIH,aAAa,KAAKG,KAAK,EAAE;MAC3BF,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAO;IACxB,CAAC,MAAM;MACLA,QAAQ,CAACE,KAAK,CAAC,CAAC,CAAM;IACxB;EACF,CAAC;;EAED;EACA,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAIC,GAAG,CAACR,MAAM,CAAC,CAAC,CAACS,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKC,MAAM,CAACF,CAAC,CAAC,GAAGE,MAAM,CAACD,CAAC,CAAC,CAAC;EAErF,oBACEb,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAAgB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBpB,OAAA;MAAKe,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BT,WAAW,CAACc,GAAG,CAAEf,KAAK,iBACrBN,OAAA;QAEEe,SAAS,EAAEO,MAAM,CAACnB,aAAa,CAAC,KAAKmB,MAAM,CAAChB,KAAK,CAAC,GAAG,UAAU,GAAG,EAAG;QACrEiB,OAAO,EAAEA,CAAA,KAAMlB,YAAY,CAACC,KAAK,CAAE;QACnCkB,IAAI,EAAC,QAAQ;QAAAR,QAAA,GACd,OACM,EAACV,KAAK;MAAA,GALN,QAAQA,KAAK,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMd,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GA7BIxB,eAAe;AA+BrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}