{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\coorrea\\\\Correa\\\\client\\\\src\\\\pages\\\\KitchenInterface.jsx\",\n  _s = $RefreshSig$();\n// src/pages/KitchenInterface.jsx\nimport React, { useEffect, useRef, useState } from 'react';\nimport KitchenOrders from '../components/KitchenOrders';\nimport { initializeSocketConnection, markOrderAsCompleted } from '../services/socket';\n\n// Reemplazamos listas en cada update (no concatenamos)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KitchenInterface = () => {\n  _s();\n  const [pendingOrders, setPendingOrders] = useState([]);\n  const [completedOrders, setCompletedOrders] = useState([]);\n\n  // IDs de completados que el usuario “eliminó” para que no reaparezcan\n  const deletedCompletedIds = useRef(new Set());\n  useEffect(() => {\n    initializeSocketConnection(payload => {\n      if (payload === '__MENU_UPDATED__') return;\n      const ordersArr = Array.isArray(payload) ? payload : [];\n      // Reemplazar pendientes con lo nuevo\n      const nextPending = ordersArr.filter(o => o.status === 'pending');\n\n      // Reemplazar completados con lo nuevo, pero filtrando los eliminados\n      const nextCompleted = ordersArr.filter(o => o.status === 'completed').filter(o => !deletedCompletedIds.current.has(o.id));\n      setPendingOrders(nextPending);\n      setCompletedOrders(nextCompleted);\n    });\n  }, []);\n  const handleCompleteOrder = async orderId => {\n    try {\n      await markOrderAsCompleted(orderId);\n      // Optimista: sácalo de pendientes\n      setPendingOrders(prev => prev.filter(o => o.id !== orderId));\n      // Cuando el WS mande el update, caerá en completados y se verá ahí\n    } catch (error) {\n      console.error('Error al completar pedido:', error);\n    }\n  };\n  const handleClearCompleted = () => {\n    if (!completedOrders.length) return;\n    const ok = window.confirm('¿Eliminar de la vista todos los pedidos completados?');\n    if (!ok) return;\n\n    // Guardar IDs de completados “eliminados” para que no reaparezcan\n    for (const o of completedOrders) {\n      deletedCompletedIds.current.add(o.id);\n    }\n    setCompletedOrders([]);\n  };\n  const handleRefresh = () => {\n    // Forzar un “resync” simple: limpiar IDs eliminados y pedir que el socket reenvié al próximo update\n    deletedCompletedIds.current.clear();\n    // Nota: si quieres refetch inmediato, puedes recargar la página o\n    // emitir una señal al servidor para que reenvíe 'initial_data'\n    // Aquí solo dejamos limpio para que la próxima actualización muestre todo.\n    alert('Filtro de completados eliminado. En el próximo update se verán de nuevo.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kitchen-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kitchen-header\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"kitchen-title\",\n        children: \"Pedidos en Cocina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRefresh,\n          children: \"Refrescar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearCompleted,\n          children: \"Eliminar completados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(KitchenOrders, {\n        title: \"Pedidos Pendientes\",\n        orders: pendingOrders,\n        onCompleteOrder: handleCompleteOrder,\n        showCompleteButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KitchenOrders, {\n        title: \"Pedidos Completados\",\n        orders: completedOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(KitchenInterface, \"jZim3gJDwkwAPyZj4ehsbgStMYA=\");\n_c = KitchenInterface;\nexport default KitchenInterface;\nvar _c;\n$RefreshReg$(_c, \"KitchenInterface\");","map":{"version":3,"names":["React","useEffect","useRef","useState","KitchenOrders","initializeSocketConnection","markOrderAsCompleted","jsxDEV","_jsxDEV","KitchenInterface","_s","pendingOrders","setPendingOrders","completedOrders","setCompletedOrders","deletedCompletedIds","Set","payload","ordersArr","Array","isArray","nextPending","filter","o","status","nextCompleted","current","has","id","handleCompleteOrder","orderId","prev","error","console","handleClearCompleted","length","ok","window","confirm","add","handleRefresh","clear","alert","className","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","gap","onClick","title","orders","onCompleteOrder","showCompleteButton","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/coorrea/Correa/client/src/pages/KitchenInterface.jsx"],"sourcesContent":["// src/pages/KitchenInterface.jsx\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport KitchenOrders from '../components/KitchenOrders';\r\nimport { initializeSocketConnection, markOrderAsCompleted } from '../services/socket';\r\n\r\n// Reemplazamos listas en cada update (no concatenamos)\r\nconst KitchenInterface = () => {\r\n  const [pendingOrders, setPendingOrders] = useState([]);\r\n  const [completedOrders, setCompletedOrders] = useState([]);\r\n\r\n  // IDs de completados que el usuario “eliminó” para que no reaparezcan\r\n  const deletedCompletedIds = useRef(new Set());\r\n\r\n  useEffect(() => {\r\n    initializeSocketConnection((payload) => {\r\n      if (payload === '__MENU_UPDATED__') return;\r\n\r\n      const ordersArr = Array.isArray(payload) ? payload : [];\r\n      // Reemplazar pendientes con lo nuevo\r\n      const nextPending = ordersArr.filter(o => o.status === 'pending');\r\n\r\n      // Reemplazar completados con lo nuevo, pero filtrando los eliminados\r\n      const nextCompleted = ordersArr\r\n        .filter(o => o.status === 'completed')\r\n        .filter(o => !deletedCompletedIds.current.has(o.id));\r\n\r\n      setPendingOrders(nextPending);\r\n      setCompletedOrders(nextCompleted);\r\n    });\r\n  }, []);\r\n\r\n  const handleCompleteOrder = async (orderId) => {\r\n    try {\r\n      await markOrderAsCompleted(orderId);\r\n      // Optimista: sácalo de pendientes\r\n      setPendingOrders(prev => prev.filter(o => o.id !== orderId));\r\n      // Cuando el WS mande el update, caerá en completados y se verá ahí\r\n    } catch (error) {\r\n      console.error('Error al completar pedido:', error);\r\n    }\r\n  };\r\n\r\n  const handleClearCompleted = () => {\r\n    if (!completedOrders.length) return;\r\n    const ok = window.confirm('¿Eliminar de la vista todos los pedidos completados?');\r\n    if (!ok) return;\r\n\r\n    // Guardar IDs de completados “eliminados” para que no reaparezcan\r\n    for (const o of completedOrders) {\r\n      deletedCompletedIds.current.add(o.id);\r\n    }\r\n    setCompletedOrders([]);\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    // Forzar un “resync” simple: limpiar IDs eliminados y pedir que el socket reenvié al próximo update\r\n    deletedCompletedIds.current.clear();\r\n    // Nota: si quieres refetch inmediato, puedes recargar la página o\r\n    // emitir una señal al servidor para que reenvíe 'initial_data'\r\n    // Aquí solo dejamos limpio para que la próxima actualización muestre todo.\r\n    alert('Filtro de completados eliminado. En el próximo update se verán de nuevo.');\r\n  };\r\n\r\n  return (\r\n    <div className=\"kitchen-interface\">\r\n      <div className=\"kitchen-header\" style={{display:'flex', justifyContent:'space-between', alignItems:'center'}}>\r\n        <h1 className=\"kitchen-title\">Pedidos en Cocina</h1>\r\n        <div style={{display:'flex', gap:12}}>\r\n          <button onClick={handleRefresh}>Refrescar</button>\r\n          <button onClick={handleClearCompleted}>Eliminar completados</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"orders-container\">\r\n        <KitchenOrders\r\n          title=\"Pedidos Pendientes\"\r\n          orders={pendingOrders}\r\n          onCompleteOrder={handleCompleteOrder}\r\n          showCompleteButton\r\n        />\r\n        <KitchenOrders\r\n          title=\"Pedidos Completados\"\r\n          orders={completedOrders}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KitchenInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}