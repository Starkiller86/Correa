{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\Correa\\\\client\\\\src\\\\pages\\\\Bartender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { initBarSocket } from '../services/BarSocket';\nimport jsPDF from 'jspdf';\nimport './bartender.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LEDGER_KEY = 'alcohol_sales_ledger_v1';\nfunction loadLedger() {\n  try {\n    const raw = localStorage.getItem(LEDGER_KEY);\n    if (!raw) {\n      return {\n        processedOrderIds: {},\n        totals: {\n          simples: 0,\n          dobles: 0,\n          triples: 0,\n          botellas: 0,\n          amount: 0\n        }\n      };\n    }\n    const parsed = JSON.parse(raw);\n    return {\n      processedOrderIds: parsed.processedOrderIds || {},\n      totals: parsed.totals || {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      }\n    };\n  } catch {\n    return {\n      processedOrderIds: {},\n      totals: {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      }\n    };\n  }\n}\nfunction saveLedger(ledger) {\n  localStorage.setItem(LEDGER_KEY, JSON.stringify(ledger));\n}\nconst Bartender = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [ledger, setLedger] = useState(loadLedger());\n  const [showStats, setShowStats] = useState(false);\n  useEffect(() => {\n    const saved = localStorage.getItem('alcohol_orders');\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        setOrders(parsed);\n        foldOrdersIntoLedger(parsed);\n      } catch {}\n    }\n  }, []);\n  useEffect(() => {\n    const mergeUnique = incoming => {\n      setOrders(prev => {\n        const combined = [...prev, ...incoming];\n        // si no tiene \"completed\" lo agregamos en false\n        const withFlag = combined.map(o => ({\n          ...o,\n          completed: o.completed || false\n        }));\n        const unique = Array.from(new Map(withFlag.map(o => [o.id, o])).values());\n        localStorage.setItem('alcohol_orders', JSON.stringify(unique));\n        return unique;\n      });\n      foldOrdersIntoLedger(incoming);\n    };\n    initBarSocket(mergeUnique);\n  }, []);\n  useEffect(() => {\n    const onStorage = e => {\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\n        try {\n          const parsed = JSON.parse(e.newValue);\n          setOrders(prev => {\n            const prevIds = new Set(prev.map(o => o.id));\n            const changed = parsed.some(o => !prevIds.has(o.id)) || prev.length !== parsed.length;\n            return changed ? parsed : prev;\n          });\n          foldOrdersIntoLedger(parsed);\n        } catch {}\n      }\n    };\n    window.addEventListener('storage', onStorage);\n    return () => window.removeEventListener('storage', onStorage);\n  }, []);\n  const foldOrdersIntoLedger = ordersArr => {\n    if (!Array.isArray(ordersArr) || ordersArr.length === 0) return;\n    setLedger(prev => {\n      const next = {\n        processedOrderIds: {\n          ...prev.processedOrderIds\n        },\n        totals: {\n          ...prev.totals\n        }\n      };\n      let changed = false;\n      for (const order of ordersArr) {\n        var _ref, _order$items;\n        if (!(order !== null && order !== void 0 && order.id) || next.processedOrderIds[order.id]) continue;\n        const items = (_ref = (_order$items = order.items) !== null && _order$items !== void 0 ? _order$items : order.pedidos) !== null && _ref !== void 0 ? _ref : [];\n        for (const it of items) {\n          const size = (it.size || 'simple').toLowerCase();\n          const category = (it.category || '').toLowerCase();\n          const price = Number(it.price) || 0;\n          if (category === 'botellas') {\n            next.totals.botellas += Number(it.quantity) || 1;\n          } else if (size === 'doble') {\n            next.totals.dobles += 1;\n          } else if (size === 'triple') {\n            next.totals.triples += 1;\n          } else {\n            next.totals.simples += 1;\n          }\n          next.totals.amount += price;\n          changed = true;\n        }\n        next.processedOrderIds[order.id] = true;\n        changed = true;\n      }\n      if (changed) saveLedger(next);\n      return changed ? next : prev;\n    });\n  };\n  const pedidosPorMesa = useMemo(() => {\n    const mesas = {};\n    for (const order of orders) {\n      var _order$table, _ref2, _order$items2;\n      const mesa = (_order$table = order.table) !== null && _order$table !== void 0 ? _order$table : order.mesa;\n      if (mesa == null) continue;\n      if (!mesas[mesa]) mesas[mesa] = [];\n      const items = (_ref2 = (_order$items2 = order.items) !== null && _order$items2 !== void 0 ? _order$items2 : order.pedidos) !== null && _ref2 !== void 0 ? _ref2 : [];\n      mesas[mesa].push(...items);\n    }\n    return mesas;\n  }, [orders]);\n  const statsLive = useMemo(() => {\n    let total = 0,\n      simples = 0,\n      dobles = 0,\n      triples = 0,\n      botellas = 0;\n    for (const order of orders) {\n      var _ref3, _order$items3;\n      const items = (_ref3 = (_order$items3 = order.items) !== null && _order$items3 !== void 0 ? _order$items3 : order.pedidos) !== null && _ref3 !== void 0 ? _ref3 : [];\n      for (const it of items) {\n        const size = (it.size || 'simple').toLowerCase();\n        const category = (it.category || '').toLowerCase();\n        const price = Number(it.price) || 0;\n        if (category === 'botellas') {\n          botellas += Number(it.quantity) || 1;\n        } else if (size === 'doble') {\n          dobles++;\n        } else if (size === 'triple') {\n          triples++;\n        } else {\n          simples++;\n        }\n        total += price;\n      }\n    }\n    return {\n      total,\n      simples,\n      dobles,\n      triples,\n      botellas\n    };\n  }, [orders]);\n  const statsLedger = ledger.totals;\n  const resetLedger = () => {\n    const empty = {\n      processedOrderIds: {},\n      totals: {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      }\n    };\n    setLedger(empty);\n    saveLedger(empty);\n  };\n  const markAsCompleted = orderId => {\n    const updated = orders.map(o => o.id === orderId ? {\n      ...o,\n      completed: true\n    } : o);\n    setOrders(updated);\n    localStorage.setItem('alcohol_orders', JSON.stringify(updated));\n  };\n  const clearCompletedOrders = () => {\n    const updated = orders.filter(o => !o.completed);\n    setOrders(updated);\n    localStorage.setItem('alcohol_orders', JSON.stringify(updated));\n  };\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(16);\n    doc.text('Historial de Ventas - Bar', 10, 10);\n    doc.setFontSize(12);\n    doc.text(`Simples: ${statsLedger.simples}`, 10, 20);\n    doc.text(`Dobles: ${statsLedger.dobles}`, 10, 30);\n    doc.text(`Triples: ${statsLedger.triples}`, 10, 40);\n    doc.text(`Botellas: ${statsLedger.botellas}`, 10, 50);\n    doc.text(`Total vendido: $${statsLedger.amount.toFixed(2)}`, 10, 60);\n    doc.save('historial_ventas_bar.pdf');\n  };\n  const mesasKeys = Object.keys(pedidosPorMesa).sort((a, b) => Number(a) - Number(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bartender-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pedidos del Bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), mesasKeys.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay pedidos a\\xFAn.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 9\n    }, this) : mesasKeys.map(mesa => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mesa-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Mesa \", mesa]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: orders.filter(o => {\n          var _o$table;\n          return ((_o$table = o.table) !== null && _o$table !== void 0 ? _o$table : o.mesa) === mesa;\n        }).map(order => {\n          var _order$items4;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              textDecoration: order.completed ? 'line-through' : 'none'\n            },\n            children: [(_order$items4 = order.items) === null || _order$items4 === void 0 ? void 0 : _order$items4.map((item, idx) => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [item.name, \" \", item.size ? `(${item.size})` : '', item.category === 'botellas' ? ` x${item.quantity || 1}` : '', ' ']\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 23\n            }, this)), !order.completed && /*#__PURE__*/_jsxDEV(\"button\", {\n              style: {\n                marginLeft: '10px',\n                backgroundColor: '#2ecc71'\n              },\n              onClick: () => markAsCompleted(order.id),\n              children: \"\\u2705 Completar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 23\n            }, this)]\n          }, order.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this)]\n    }, mesa, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }, this)), orders.some(o => o.completed) && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        backgroundColor: '#e67e22',\n        marginTop: '10px'\n      },\n      onClick: clearCompletedOrders,\n      children: \"\\uD83D\\uDDD1 Eliminar todas las completadas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowStats(s => !s),\n      children: showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), showStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resumen de Ventas (Hist\\xF3rico)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Simples: \", statsLedger.simples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dobles: \", statsLedger.dobles]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Triples: \", statsLedger.triples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Botellas: \", statsLedger.botellas]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Total: $\", statsLedger.amount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: 12\n        },\n        onClick: downloadPDF,\n        children: \"\\uD83D\\uDCC4 Descargar historial en PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        style: {\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Comparar con ventas abiertas (en vivo)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Simples (vivo): \", statsLive.simples]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dobles (vivo): \", statsLive.dobles]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Triples (vivo): \", statsLive.triples]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Botellas (vivo): \", statsLive.botellas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Total (vivo): $\", statsLive.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        style: {\n          marginTop: 12\n        },\n        onClick: resetLedger,\n        children: \"Reiniciar resumen hist\\xF3rico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n};\n_s(Bartender, \"Y5irnZtJbFkOjt/et9YCCzZD7YQ=\");\n_c = Bartender;\nexport default Bartender;\nvar _c;\n$RefreshReg$(_c, \"Bartender\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","initBarSocket","jsPDF","jsxDEV","_jsxDEV","LEDGER_KEY","loadLedger","raw","localStorage","getItem","processedOrderIds","totals","simples","dobles","triples","botellas","amount","parsed","JSON","parse","saveLedger","ledger","setItem","stringify","Bartender","_s","orders","setOrders","setLedger","showStats","setShowStats","saved","foldOrdersIntoLedger","mergeUnique","incoming","prev","combined","withFlag","map","o","completed","unique","Array","from","Map","id","values","onStorage","e","key","newValue","prevIds","Set","changed","some","has","length","window","addEventListener","removeEventListener","ordersArr","isArray","next","order","_ref","_order$items","items","pedidos","it","size","toLowerCase","category","price","Number","quantity","pedidosPorMesa","mesas","_order$table","_ref2","_order$items2","mesa","table","push","statsLive","total","_ref3","_order$items3","statsLedger","resetLedger","empty","markAsCompleted","orderId","updated","clearCompletedOrders","filter","downloadPDF","doc","setFontSize","text","toFixed","save","mesasKeys","Object","keys","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_o$table","_order$items4","style","textDecoration","item","idx","name","marginLeft","backgroundColor","onClick","marginTop","s","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/Correa/client/src/pages/Bartender.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { initBarSocket } from '../services/BarSocket';\r\nimport jsPDF from 'jspdf';\r\nimport './bartender.css';\r\n\r\nconst LEDGER_KEY = 'alcohol_sales_ledger_v1';\r\n\r\nfunction loadLedger() {\r\n  try {\r\n    const raw = localStorage.getItem(LEDGER_KEY);\r\n    if (!raw) {\r\n      return { processedOrderIds: {}, totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 } };\r\n    }\r\n    const parsed = JSON.parse(raw);\r\n    return {\r\n      processedOrderIds: parsed.processedOrderIds || {},\r\n      totals: parsed.totals || { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 },\r\n    };\r\n  } catch {\r\n    return { processedOrderIds: {}, totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 } };\r\n  }\r\n}\r\n\r\nfunction saveLedger(ledger) {\r\n  localStorage.setItem(LEDGER_KEY, JSON.stringify(ledger));\r\n}\r\n\r\nconst Bartender = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [ledger, setLedger] = useState(loadLedger());\r\n  const [showStats, setShowStats] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('alcohol_orders');\r\n    if (saved) {\r\n      try {\r\n        const parsed = JSON.parse(saved);\r\n        setOrders(parsed);\r\n        foldOrdersIntoLedger(parsed);\r\n      } catch {}\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const mergeUnique = (incoming) => {\r\n      setOrders((prev) => {\r\n        const combined = [...prev, ...incoming];\r\n        // si no tiene \"completed\" lo agregamos en false\r\n        const withFlag = combined.map(o => ({ ...o, completed: o.completed || false }));\r\n        const unique = Array.from(new Map(withFlag.map(o => [o.id, o])).values());\r\n        localStorage.setItem('alcohol_orders', JSON.stringify(unique));\r\n        return unique;\r\n      });\r\n      foldOrdersIntoLedger(incoming);\r\n    };\r\n    initBarSocket(mergeUnique);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const onStorage = (e) => {\r\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\r\n        try {\r\n          const parsed = JSON.parse(e.newValue);\r\n          setOrders((prev) => {\r\n            const prevIds = new Set(prev.map(o => o.id));\r\n            const changed = parsed.some(o => !prevIds.has(o.id)) || prev.length !== parsed.length;\r\n            return changed ? parsed : prev;\r\n          });\r\n          foldOrdersIntoLedger(parsed);\r\n        } catch {}\r\n      }\r\n    };\r\n    window.addEventListener('storage', onStorage);\r\n    return () => window.removeEventListener('storage', onStorage);\r\n  }, []);\r\n\r\n  const foldOrdersIntoLedger = (ordersArr) => {\r\n    if (!Array.isArray(ordersArr) || ordersArr.length === 0) return;\r\n\r\n    setLedger((prev) => {\r\n      const next = {\r\n        processedOrderIds: { ...prev.processedOrderIds },\r\n        totals: { ...prev.totals },\r\n      };\r\n\r\n      let changed = false;\r\n\r\n      for (const order of ordersArr) {\r\n        if (!order?.id || next.processedOrderIds[order.id]) continue;\r\n\r\n        const items = order.items ?? order.pedidos ?? [];\r\n        for (const it of items) {\r\n          const size = (it.size || 'simple').toLowerCase();\r\n          const category = (it.category || '').toLowerCase();\r\n          const price = Number(it.price) || 0;\r\n\r\n          if (category === 'botellas') {\r\n            next.totals.botellas += Number(it.quantity) || 1;\r\n          } else if (size === 'doble') {\r\n            next.totals.dobles += 1;\r\n          } else if (size === 'triple') {\r\n            next.totals.triples += 1;\r\n          } else {\r\n            next.totals.simples += 1;\r\n          }\r\n\r\n          next.totals.amount += price;\r\n          changed = true;\r\n        }\r\n\r\n        next.processedOrderIds[order.id] = true;\r\n        changed = true;\r\n      }\r\n\r\n      if (changed) saveLedger(next);\r\n      return changed ? next : prev;\r\n    });\r\n  };\r\n\r\n  const pedidosPorMesa = useMemo(() => {\r\n    const mesas = {};\r\n    for (const order of orders) {\r\n      const mesa = order.table ?? order.mesa;\r\n      if (mesa == null) continue;\r\n      if (!mesas[mesa]) mesas[mesa] = [];\r\n      const items = order.items ?? order.pedidos ?? [];\r\n      mesas[mesa].push(...items);\r\n    }\r\n    return mesas;\r\n  }, [orders]);\r\n\r\n  const statsLive = useMemo(() => {\r\n    let total = 0, simples = 0, dobles = 0, triples = 0, botellas = 0;\r\n    for (const order of orders) {\r\n      const items = order.items ?? order.pedidos ?? [];\r\n      for (const it of items) {\r\n        const size = (it.size || 'simple').toLowerCase();\r\n        const category = (it.category || '').toLowerCase();\r\n        const price = Number(it.price) || 0;\r\n\r\n        if (category === 'botellas') {\r\n          botellas += Number(it.quantity) || 1;\r\n        } else if (size === 'doble') {\r\n          dobles++;\r\n        } else if (size === 'triple') {\r\n          triples++;\r\n        } else {\r\n          simples++;\r\n        }\r\n        total += price;\r\n      }\r\n    }\r\n    return { total, simples, dobles, triples, botellas };\r\n  }, [orders]);\r\n\r\n  const statsLedger = ledger.totals;\r\n\r\n  const resetLedger = () => {\r\n    const empty = { processedOrderIds: {}, totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 } };\r\n    setLedger(empty);\r\n    saveLedger(empty);\r\n  };\r\n\r\n  const markAsCompleted = (orderId) => {\r\n    const updated = orders.map(o => o.id === orderId ? { ...o, completed: true } : o);\r\n    setOrders(updated);\r\n    localStorage.setItem('alcohol_orders', JSON.stringify(updated));\r\n  };\r\n\r\n  const clearCompletedOrders = () => {\r\n    const updated = orders.filter(o => !o.completed);\r\n    setOrders(updated);\r\n    localStorage.setItem('alcohol_orders', JSON.stringify(updated));\r\n  };\r\n\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(16);\r\n    doc.text('Historial de Ventas - Bar', 10, 10);\r\n\r\n    doc.setFontSize(12);\r\n    doc.text(`Simples: ${statsLedger.simples}`, 10, 20);\r\n    doc.text(`Dobles: ${statsLedger.dobles}`, 10, 30);\r\n    doc.text(`Triples: ${statsLedger.triples}`, 10, 40);\r\n    doc.text(`Botellas: ${statsLedger.botellas}`, 10, 50);\r\n    doc.text(`Total vendido: $${statsLedger.amount.toFixed(2)}`, 10, 60);\r\n\r\n    doc.save('historial_ventas_bar.pdf');\r\n  };\r\n\r\n  const mesasKeys = Object.keys(pedidosPorMesa).sort((a, b) => Number(a) - Number(b));\r\n\r\n  return (\r\n    <div className=\"bartender-interface\">\r\n      <h1>Pedidos del Bar</h1>\r\n\r\n      {mesasKeys.length === 0 ? (\r\n        <p>No hay pedidos aún.</p>\r\n      ) : (\r\n        mesasKeys.map((mesa) => (\r\n          <div key={mesa} className=\"mesa-section\">\r\n            <h2>Mesa {mesa}</h2>\r\n            <ul>\r\n              {orders\r\n                .filter(o => (o.table ?? o.mesa) === mesa)\r\n                .map((order) => (\r\n                  <li key={order.id} style={{ textDecoration: order.completed ? 'line-through' : 'none' }}>\r\n                    {order.items?.map((item, idx) => (\r\n                      <span key={idx}>\r\n                        {item.name} {item.size ? `(${item.size})` : ''}\r\n                        {item.category === 'botellas' ? ` x${item.quantity || 1}` : ''}{' '}\r\n                      </span>\r\n                    ))}\r\n                    {!order.completed && (\r\n                      <button\r\n                        style={{ marginLeft: '10px', backgroundColor: '#2ecc71' }}\r\n                        onClick={() => markAsCompleted(order.id)}\r\n                      >\r\n                        ✅ Completar\r\n                      </button>\r\n                    )}\r\n                  </li>\r\n                ))}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      {orders.some(o => o.completed) && (\r\n        <button\r\n          style={{ backgroundColor: '#e67e22', marginTop: '10px' }}\r\n          onClick={clearCompletedOrders}\r\n        >\r\n          🗑 Eliminar todas las completadas\r\n        </button>\r\n      )}\r\n\r\n      <button onClick={() => setShowStats(s => !s)}>\r\n        {showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'}\r\n      </button>\r\n\r\n      {showStats && (\r\n        <div className=\"stats\">\r\n          <h3>Resumen de Ventas (Histórico)</h3>\r\n          <p>Simples: {statsLedger.simples}</p>\r\n          <p>Dobles: {statsLedger.dobles}</p>\r\n          <p>Triples: {statsLedger.triples}</p>\r\n          <p>Botellas: {statsLedger.botellas}</p>\r\n          <p><strong>Total: ${statsLedger.amount.toFixed(2)}</strong></p>\r\n\r\n          <button style={{ marginTop: 12 }} onClick={downloadPDF}>\r\n            📄 Descargar historial en PDF\r\n          </button>\r\n\r\n          <details style={{ marginTop: 12 }}>\r\n            <summary>Comparar con ventas abiertas (en vivo)</summary>\r\n            <p>Simples (vivo): {statsLive.simples}</p>\r\n            <p>Dobles (vivo): {statsLive.dobles}</p>\r\n            <p>Triples (vivo): {statsLive.triples}</p>\r\n            <p>Botellas (vivo): {statsLive.botellas}</p>\r\n            <p><strong>Total (vivo): ${statsLive.total.toFixed(2)}</strong></p>\r\n          </details>\r\n\r\n          <button className=\"remove-button\" style={{ marginTop: 12 }} onClick={resetLedger}>\r\n            Reiniciar resumen histórico\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bartender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}