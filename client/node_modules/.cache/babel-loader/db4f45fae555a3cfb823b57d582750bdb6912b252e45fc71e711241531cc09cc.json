{"ast":null,"code":"// client/src/services/socket.js\nclass SocketService {\n  static getInstance() {\n    if (!SocketService.instance) {\n      SocketService.instance = new SocketService();\n    }\n    return SocketService.instance;\n  }\n  constructor() {\n    this.socket = null;\n    this.callbacks = {};\n    this.retryCount = 0;\n    const hostname = window.location.hostname;\n    this.wsUrl = `ws://${hostname}:8080`;\n    this.baseUrl = `http://${hostname}:3001`;\n  }\n  connect(callback) {\n    try {\n      this.socket = new WebSocket(this.wsUrl);\n      this.socket.onopen = () => {\n        console.log('✅ WebSocket conectado a', this.wsUrl);\n        this.retryCount = 0;\n        if (callback) callback();\n      };\n      this.socket.onmessage = msg => {\n        try {\n          const data = JSON.parse(msg.data);\n          if (data !== null && data !== void 0 && data.type && this.callbacks[data.type]) {\n            this.callbacks[data.type](data);\n          }\n        } catch (error) {\n          console.error('❌ Error procesando mensaje:', error);\n        }\n      };\n      this.socket.onclose = () => {\n        console.warn('🔌 WebSocket desconectado');\n        this.scheduleReconnect();\n      };\n      this.socket.onerror = error => {\n        console.error('⚠️ Error WebSocket:', error);\n      };\n    } catch (error) {\n      console.error('❌ Error al conectar WebSocket:', error);\n      this.scheduleReconnect();\n    }\n  }\n  scheduleReconnect() {\n    const delay = Math.min(1000 * 2 ** this.retryCount, 30000);\n    this.retryCount += 1;\n    setTimeout(() => this.connect(), delay);\n  }\n  on(event, callback) {\n    this.callbacks[event] = callback;\n  }\n  send(data) {\n    var _this$socket;\n    if (((_this$socket = this.socket) === null || _this$socket === void 0 ? void 0 : _this$socket.readyState) === WebSocket.OPEN) {\n      this.socket.send(JSON.stringify(data));\n    } else {\n      console.error('🚫 WebSocket no está conectado');\n    }\n  }\n\n  // REST\n  async fetchMenu() {\n    const res = await fetch(`${this.baseUrl}/dishes`);\n    return await res.json();\n  }\n  async fetchAlcohol() {\n    const res = await fetch(`${this.baseUrl}/alcohol`);\n    return await res.json();\n  }\n  async createOrder(order) {\n    const res = await fetch(`${this.baseUrl}/orders`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(order)\n    });\n    return await res.json();\n  }\n  async completeOrder(orderId) {\n    const res = await fetch(`${this.baseUrl}/orders/${orderId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        status: 'completed'\n      })\n    });\n    return await res.json();\n  }\n\n  // 🔔 NUEVO: avisos tiempo real de cambios de menús\n  notifyMenuUpdated() {\n    this.send({\n      type: 'menu_updated'\n    });\n  }\n  notifyAlcoholUpdated() {\n    this.send({\n      type: 'alcohol_updated'\n    });\n  }\n}\nSocketService.instance = null;\nexport const socket = SocketService.getInstance();\nexport const initializeSocketConnection = onOrderUpdate => {\n  socket.on('initial_data', data => onOrderUpdate === null || onOrderUpdate === void 0 ? void 0 : onOrderUpdate(data));\n  socket.on('update', data => onOrderUpdate === null || onOrderUpdate === void 0 ? void 0 : onOrderUpdate(data));\n  socket.connect();\n};\nexport const fetchMenuItems = () => socket.fetchMenu();\nexport const fetchAlcoholItems = () => socket.fetchAlcohol();\nexport const placeNewOrder = async order => {\n  await socket.createOrder(order);\n  socket.send({\n    type: 'new_order',\n    order\n  });\n};\nexport const markOrderAsCompleted = async orderId => {\n  await socket.completeOrder(orderId);\n  socket.send({\n    type: 'complete_order',\n    orderId\n  });\n};\n\n// 🔔 Export helpers para admins\nexport const notifyMenuUpdated = () => socket.notifyMenuUpdated();\nexport const notifyAlcoholUpdated = () => socket.notifyAlcoholUpdated();","map":{"version":3,"names":["SocketService","getInstance","instance","constructor","socket","callbacks","retryCount","hostname","window","location","wsUrl","baseUrl","connect","callback","WebSocket","onopen","console","log","onmessage","msg","data","JSON","parse","type","error","onclose","warn","scheduleReconnect","onerror","delay","Math","min","setTimeout","on","event","send","_this$socket","readyState","OPEN","stringify","fetchMenu","res","fetch","json","fetchAlcohol","createOrder","order","method","headers","body","completeOrder","orderId","status","notifyMenuUpdated","notifyAlcoholUpdated","initializeSocketConnection","onOrderUpdate","fetchMenuItems","fetchAlcoholItems","placeNewOrder","markOrderAsCompleted"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/coorrea/Correa/client/src/services/socket.js"],"sourcesContent":["// client/src/services/socket.js\r\nclass SocketService {\r\n  static instance = null;\r\n\r\n  static getInstance() {\r\n    if (!SocketService.instance) {\r\n      SocketService.instance = new SocketService();\r\n    }\r\n    return SocketService.instance;\r\n  }\r\n\r\n  constructor() {\r\n    this.socket = null;\r\n    this.callbacks = {};\r\n    this.retryCount = 0;\r\n\r\n    const hostname = window.location.hostname;\r\n    this.wsUrl = `ws://${hostname}:8080`;\r\n    this.baseUrl = `http://${hostname}:3001`;\r\n  }\r\n\r\n  connect(callback) {\r\n    try {\r\n      this.socket = new WebSocket(this.wsUrl);\r\n\r\n      this.socket.onopen = () => {\r\n        console.log('✅ WebSocket conectado a', this.wsUrl);\r\n        this.retryCount = 0;\r\n        if (callback) callback();\r\n      };\r\n\r\n      this.socket.onmessage = (msg) => {\r\n        try {\r\n          const data = JSON.parse(msg.data);\r\n          if (data?.type && this.callbacks[data.type]) {\r\n            this.callbacks[data.type](data);\r\n          }\r\n        } catch (error) {\r\n          console.error('❌ Error procesando mensaje:', error);\r\n        }\r\n      };\r\n\r\n      this.socket.onclose = () => {\r\n        console.warn('🔌 WebSocket desconectado');\r\n        this.scheduleReconnect();\r\n      };\r\n\r\n      this.socket.onerror = (error) => {\r\n        console.error('⚠️ Error WebSocket:', error);\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('❌ Error al conectar WebSocket:', error);\r\n      this.scheduleReconnect();\r\n    }\r\n  }\r\n\r\n  scheduleReconnect() {\r\n    const delay = Math.min(1000 * (2 ** this.retryCount), 30000);\r\n    this.retryCount += 1;\r\n    setTimeout(() => this.connect(), delay);\r\n  }\r\n\r\n  on(event, callback) {\r\n    this.callbacks[event] = callback;\r\n  }\r\n\r\n  send(data) {\r\n    if (this.socket?.readyState === WebSocket.OPEN) {\r\n      this.socket.send(JSON.stringify(data));\r\n    } else {\r\n      console.error('🚫 WebSocket no está conectado');\r\n    }\r\n  }\r\n\r\n  // REST\r\n  async fetchMenu() {\r\n    const res = await fetch(`${this.baseUrl}/dishes`);\r\n    return await res.json();\r\n  }\r\n\r\n  async fetchAlcohol() {\r\n    const res = await fetch(`${this.baseUrl}/alcohol`);\r\n    return await res.json();\r\n  }\r\n\r\n  async createOrder(order) {\r\n    const res = await fetch(`${this.baseUrl}/orders`, {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(order)\r\n    });\r\n    return await res.json();\r\n  }\r\n\r\n  async completeOrder(orderId) {\r\n    const res = await fetch(`${this.baseUrl}/orders/${orderId}`, {\r\n      method: 'PATCH',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ status: 'completed' })\r\n    });\r\n    return await res.json();\r\n  }\r\n\r\n  // 🔔 NUEVO: avisos tiempo real de cambios de menús\r\n  notifyMenuUpdated() {\r\n    this.send({ type: 'menu_updated' });\r\n  }\r\n\r\n  notifyAlcoholUpdated() {\r\n    this.send({ type: 'alcohol_updated' });\r\n  }\r\n}\r\n\r\nexport const socket = SocketService.getInstance();\r\n\r\nexport const initializeSocketConnection = (onOrderUpdate) => {\r\n  socket.on('initial_data', (data) => onOrderUpdate?.(data));\r\n  socket.on('update', (data) => onOrderUpdate?.(data));\r\n  socket.connect();\r\n};\r\n\r\nexport const fetchMenuItems = () => socket.fetchMenu();\r\nexport const fetchAlcoholItems = () => socket.fetchAlcohol();\r\n\r\nexport const placeNewOrder = async (order) => {\r\n  await socket.createOrder(order);\r\n  socket.send({ type: 'new_order', order });\r\n};\r\n\r\nexport const markOrderAsCompleted = async (orderId) => {\r\n  await socket.completeOrder(orderId);\r\n  socket.send({ type: 'complete_order', orderId });\r\n};\r\n\r\n// 🔔 Export helpers para admins\r\nexport const notifyMenuUpdated = () => socket.notifyMenuUpdated();\r\nexport const notifyAlcoholUpdated = () => socket.notifyAlcoholUpdated();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}