{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\coorrea\\\\Correa\\\\client\\\\src\\\\pages\\\\ClientInterface.jsx\",\n  _s = $RefreshSig$();\n// Cambios claves marcados con // ðŸ‘ˆ\nimport React, { useState, useEffect } from 'react';\nimport TableSelector from '../components/TableroSelector';\nimport MenuItem from '../components/MenuItem';\nimport Cart from '../components/cart';\nimport ListaCuentas from '../components/ListaCuentas';\nimport { fetchMenuItems, placeNewOrder, initializeSocketConnection } from '../services/socket';\nimport { guardarCuentaEnJSON, eliminarCuentaDeJSON, cargarCuentasDesdeJSON } from '../services/cuentaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dedupById = arr => Array.from(new Map((arr || []).map(o => [o.id, o])).values());\nexport default function ClientInterface() {\n  _s();\n  const [selectedTable, setSelectedTable] = useState(null);\n  const [cart, setCart] = useState([]);\n  const [menu, setMenu] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [orders, setOrders] = useState([]);\n  const [showTotalModal, setShowTotalModal] = useState(false);\n  useEffect(() => {\n    const loadMenu = () => fetchMenuItems().then(d => setMenu(dedupById(d))).catch(console.error);\n    loadMenu();\n\n    // Solo restaurante\n    const saved = localStorage.getItem('restaurant_orders'); // ðŸ‘ˆ clave separada\n    if (saved) {\n      try {\n        setOrders(JSON.parse(saved));\n      } catch {}\n    }\n\n    // Cuentas SOLO de restaurante\n    cargarCuentasDesdeJSON('cuentas_restaurante').then((cuentas = []) => {\n      setOrders(prev => {\n        const merged = dedupById([...prev, ...cuentas]);\n        localStorage.setItem('restaurant_orders', JSON.stringify(merged));\n        return merged;\n      });\n    });\n\n    // WS Cocina\n    initializeSocketConnection(payload => {\n      if (payload === '__MENU_UPDATED__') return loadMenu();\n      const incoming = Array.isArray(payload) ? payload : [];\n      if (!incoming.length) return;\n\n      // Reemplazar (no acumular) para que no reaparezcan viejos\n      setOrders(dedupById(incoming));\n      localStorage.setItem('restaurant_orders', JSON.stringify(incoming));\n    });\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('restaurant_orders', JSON.stringify(orders));\n  }, [orders]);\n  const addToCart = (item, excludedIngredients = []) => {\n    setCart(prev => [...prev, {\n      ...item,\n      excludedIngredients,\n      id: Date.now() + Math.random().toString(36).slice(2, 9)\n    }]);\n  };\n  const removeFromCart = id => setCart(prev => prev.filter(i => i.id !== id));\n  const placeOrder = async () => {\n    if (!selectedTable || cart.length === 0) return;\n    const order = {\n      id: `${Date.now()}`,\n      table: selectedTable,\n      items: cart,\n      timestamp: new Date().toISOString(),\n      status: 'pending',\n      source: 'kitchen'\n    };\n    const saved = await placeNewOrder(order); // ðŸ‘ˆ WS garantizado\n    await guardarCuentaEnJSON(saved, 'cuentas_restaurante'); // ðŸ‘ˆ colecciÃ³n correcta\n    setOrders(prev => dedupById([...prev, saved]));\n    setCart([]);\n    alert('Â¡Pedido enviado!');\n  };\n  const closeTableAccount = async mesa => {\n    if (!window.confirm(`Â¿Cerrar cuenta de la mesa ${mesa}?`)) return;\n    const mesaOrders = orders.filter(o => o.table === mesa);\n    for (const o of mesaOrders) await eliminarCuentaDeJSON(o.id, 'cuentas_restaurante'); // ðŸ‘ˆ\n    const updated = orders.filter(o => o.table !== mesa);\n    setOrders(updated);\n    localStorage.setItem('restaurant_orders', JSON.stringify(updated));\n    alert(`Cuenta de mesa ${mesa} cerrada.`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"client-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Men\\xFA del Restaurante\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"search-input\",\n      placeholder: \"Buscar platillo o bebida...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableSelector, {\n      tables: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15],\n      selectedTable: selectedTable,\n      onSelect: setSelectedTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interface-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-container\",\n        children: menu.filter(item => item.name.toLowerCase().includes(searchTerm.toLowerCase()) || (item.category || '').toLowerCase().includes(searchTerm.toLowerCase())).map((item, idx) => /*#__PURE__*/_jsxDEV(MenuItem, {\n          item: item,\n          onAdd: addToCart\n        }, `${item.id}-${idx}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 34\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cart-container\",\n        children: [/*#__PURE__*/_jsxDEV(Cart, {\n          items: cart,\n          onRemove: removeFromCart,\n          onPlaceOrder: placeOrder,\n          isTableSelected: !!selectedTable\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"show-total-button\",\n          onClick: () => setShowTotalModal(true),\n          children: \"Ver Cuentas Activas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), showTotalModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(ListaCuentas, {\n          orders: orders,\n          onCerrarMesa: closeTableAccount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cerrar-btn\",\n          onClick: () => setShowTotalModal(false),\n          children: \"Cerrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(ClientInterface, \"avbTZSCAxXwT0QfeSelUtOm3yQQ=\");\n_c = ClientInterface;\nvar _c;\n$RefreshReg$(_c, \"ClientInterface\");","map":{"version":3,"names":["React","useState","useEffect","TableSelector","MenuItem","Cart","ListaCuentas","fetchMenuItems","placeNewOrder","initializeSocketConnection","guardarCuentaEnJSON","eliminarCuentaDeJSON","cargarCuentasDesdeJSON","jsxDEV","_jsxDEV","dedupById","arr","Array","from","Map","map","o","id","values","ClientInterface","_s","selectedTable","setSelectedTable","cart","setCart","menu","setMenu","searchTerm","setSearchTerm","orders","setOrders","showTotalModal","setShowTotalModal","loadMenu","then","d","catch","console","error","saved","localStorage","getItem","JSON","parse","cuentas","prev","merged","setItem","stringify","payload","incoming","isArray","length","addToCart","item","excludedIngredients","Date","now","Math","random","toString","slice","removeFromCart","filter","i","placeOrder","order","table","items","timestamp","toISOString","status","source","alert","closeTableAccount","mesa","window","confirm","mesaOrders","updated","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","tables","onSelect","name","toLowerCase","includes","category","idx","onAdd","onRemove","onPlaceOrder","isTableSelected","onClick","onCerrarMesa","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/coorrea/Correa/client/src/pages/ClientInterface.jsx"],"sourcesContent":["// Cambios claves marcados con // ðŸ‘ˆ\r\nimport React, { useState, useEffect } from 'react';\r\nimport TableSelector from '../components/TableroSelector';\r\nimport MenuItem from '../components/MenuItem';\r\nimport Cart from '../components/cart';\r\nimport ListaCuentas from '../components/ListaCuentas';\r\n\r\nimport { fetchMenuItems, placeNewOrder, initializeSocketConnection } from '../services/socket';\r\nimport { guardarCuentaEnJSON, eliminarCuentaDeJSON, cargarCuentasDesdeJSON } from '../services/cuentaService';\r\n\r\nconst dedupById = (arr) => Array.from(new Map((arr || []).map(o => [o.id, o])).values());\r\n\r\nexport default function ClientInterface() {\r\n  const [selectedTable, setSelectedTable] = useState(null);\r\n  const [cart, setCart] = useState([]);\r\n  const [menu, setMenu] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [orders, setOrders] = useState([]);\r\n  const [showTotalModal, setShowTotalModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loadMenu = () => fetchMenuItems().then(d => setMenu(dedupById(d))).catch(console.error);\r\n    loadMenu();\r\n\r\n    // Solo restaurante\r\n    const saved = localStorage.getItem('restaurant_orders');            // ðŸ‘ˆ clave separada\r\n    if (saved) { try { setOrders(JSON.parse(saved)); } catch {} }\r\n\r\n    // Cuentas SOLO de restaurante\r\n    cargarCuentasDesdeJSON('cuentas_restaurante').then((cuentas = []) => {\r\n      setOrders(prev => {\r\n        const merged = dedupById([...prev, ...cuentas]);\r\n        localStorage.setItem('restaurant_orders', JSON.stringify(merged));\r\n        return merged;\r\n      });\r\n    });\r\n\r\n    // WS Cocina\r\n    initializeSocketConnection((payload) => {\r\n      if (payload === '__MENU_UPDATED__') return loadMenu();\r\n\r\n      const incoming = Array.isArray(payload) ? payload : [];\r\n      if (!incoming.length) return;\r\n\r\n      // Reemplazar (no acumular) para que no reaparezcan viejos\r\n      setOrders(dedupById(incoming));\r\n      localStorage.setItem('restaurant_orders', JSON.stringify(incoming));\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('restaurant_orders', JSON.stringify(orders));\r\n  }, [orders]);\r\n\r\n  const addToCart = (item, excludedIngredients = []) => {\r\n    setCart(prev => [...prev, { ...item, excludedIngredients, id: Date.now() + Math.random().toString(36).slice(2,9) }]);\r\n  };\r\n  const removeFromCart = (id) => setCart(prev => prev.filter(i => i.id !== id));\r\n\r\n  const placeOrder = async () => {\r\n    if (!selectedTable || cart.length === 0) return;\r\n    const order = {\r\n      id: `${Date.now()}`,\r\n      table: selectedTable,\r\n      items: cart,\r\n      timestamp: new Date().toISOString(),\r\n      status: 'pending',\r\n      source: 'kitchen'\r\n    };\r\n    const saved = await placeNewOrder(order);                 // ðŸ‘ˆ WS garantizado\r\n    await guardarCuentaEnJSON(saved, 'cuentas_restaurante');  // ðŸ‘ˆ colecciÃ³n correcta\r\n    setOrders(prev => dedupById([...prev, saved]));\r\n    setCart([]);\r\n    alert('Â¡Pedido enviado!');\r\n  };\r\n\r\n  const closeTableAccount = async (mesa) => {\r\n    if (!window.confirm(`Â¿Cerrar cuenta de la mesa ${mesa}?`)) return;\r\n    const mesaOrders = orders.filter(o => o.table === mesa);\r\n    for (const o of mesaOrders) await eliminarCuentaDeJSON(o.id, 'cuentas_restaurante'); // ðŸ‘ˆ\r\n    const updated = orders.filter(o => o.table !== mesa);\r\n    setOrders(updated);\r\n    localStorage.setItem('restaurant_orders', JSON.stringify(updated));\r\n    alert(`Cuenta de mesa ${mesa} cerrada.`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"client-interface\">\r\n      <h1>MenÃº del Restaurante</h1>\r\n\r\n      <input className=\"search-input\" placeholder=\"Buscar platillo o bebida...\" value={searchTerm} onChange={e=>setSearchTerm(e.target.value)} />\r\n\r\n      <TableSelector tables={[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]} selectedTable={selectedTable} onSelect={setSelectedTable} />\r\n\r\n      <div className=\"interface-content\">\r\n        <div className=\"menu-container\">\r\n          {menu\r\n            .filter(item =>\r\n              item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n              (item.category || '').toLowerCase().includes(searchTerm.toLowerCase())\r\n            )\r\n            .map((item, idx) => (<MenuItem key={`${item.id}-${idx}`} item={item} onAdd={addToCart} />))}\r\n        </div>\r\n\r\n        <div className=\"cart-container\">\r\n          <Cart items={cart} onRemove={removeFromCart} onPlaceOrder={placeOrder} isTableSelected={!!selectedTable} />\r\n          <button className=\"show-total-button\" onClick={() => setShowTotalModal(true)}>Ver Cuentas Activas</button>\r\n        </div>\r\n      </div>\r\n\r\n      {showTotalModal && (\r\n        <div className=\"modal\">\r\n          <div className=\"modal-content\">\r\n            <ListaCuentas orders={orders} onCerrarMesa={closeTableAccount} />\r\n            <button className=\"cerrar-btn\" onClick={() => setShowTotalModal(false)}>Cerrar</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}