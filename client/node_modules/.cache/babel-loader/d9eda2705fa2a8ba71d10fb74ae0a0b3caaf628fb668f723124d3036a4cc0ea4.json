{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\Correa\\\\client\\\\src\\\\pages\\\\Bartender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { initBarSocket } from '../services/BarSocket';\nimport jsPDF from 'jspdf'; // ✅ Importamos jsPDF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LEDGER_KEY = 'alcohol_sales_ledger_v1';\nfunction loadLedger() {\n  try {\n    const raw = localStorage.getItem(LEDGER_KEY);\n    if (!raw) {\n      return {\n        processedOrderIds: {},\n        totals: {\n          simples: 0,\n          dobles: 0,\n          triples: 0,\n          botellas: 0,\n          amount: 0\n        }\n      };\n    }\n    const parsed = JSON.parse(raw);\n    return {\n      processedOrderIds: parsed.processedOrderIds || {},\n      totals: parsed.totals || {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      }\n    };\n  } catch {\n    return {\n      processedOrderIds: {},\n      totals: {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      }\n    };\n  }\n}\nfunction saveLedger(ledger) {\n  localStorage.setItem(LEDGER_KEY, JSON.stringify(ledger));\n}\nconst Bartender = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [ledger, setLedger] = useState(loadLedger());\n  const [showStats, setShowStats] = useState(false);\n  useEffect(() => {\n    const saved = localStorage.getItem('alcohol_orders');\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved);\n        setOrders(parsed);\n        foldOrdersIntoLedger(parsed);\n      } catch {}\n    }\n  }, []);\n  useEffect(() => {\n    const mergeUnique = incoming => {\n      setOrders(prev => {\n        const combined = [...prev, ...incoming];\n        const unique = Array.from(new Map(combined.map(o => [o.id, o])).values());\n        localStorage.setItem('alcohol_orders', JSON.stringify(unique));\n        return unique;\n      });\n      foldOrdersIntoLedger(incoming);\n    };\n    initBarSocket(mergeUnique);\n  }, []);\n  useEffect(() => {\n    const onStorage = e => {\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\n        try {\n          const parsed = JSON.parse(e.newValue);\n          setOrders(prev => {\n            const prevIds = new Set(prev.map(o => o.id));\n            const changed = parsed.some(o => !prevIds.has(o.id)) || prev.length !== parsed.length;\n            return changed ? parsed : prev;\n          });\n          foldOrdersIntoLedger(parsed);\n        } catch {}\n      }\n    };\n    window.addEventListener('storage', onStorage);\n    return () => window.removeEventListener('storage', onStorage);\n  }, []);\n  const foldOrdersIntoLedger = ordersArr => {\n    if (!Array.isArray(ordersArr) || ordersArr.length === 0) return;\n    setLedger(prev => {\n      const next = {\n        processedOrderIds: {\n          ...prev.processedOrderIds\n        },\n        totals: {\n          ...prev.totals\n        }\n      };\n      let changed = false;\n      for (const order of ordersArr) {\n        var _ref, _order$items;\n        if (!(order !== null && order !== void 0 && order.id) || next.processedOrderIds[order.id]) continue;\n        const items = (_ref = (_order$items = order.items) !== null && _order$items !== void 0 ? _order$items : order.pedidos) !== null && _ref !== void 0 ? _ref : [];\n        for (const it of items) {\n          const size = (it.size || 'simple').toLowerCase();\n          const category = (it.category || '').toLowerCase();\n          const price = Number(it.price) || 0;\n          if (category === 'botellas') {\n            next.totals.botellas += Number(it.quantity) || 1;\n          } else if (size === 'doble') {\n            next.totals.dobles += 1;\n          } else if (size === 'triple') {\n            next.totals.triples += 1;\n          } else {\n            next.totals.simples += 1;\n          }\n          next.totals.amount += price;\n          changed = true;\n        }\n        next.processedOrderIds[order.id] = true;\n        changed = true;\n      }\n      if (changed) saveLedger(next);\n      return changed ? next : prev;\n    });\n  };\n  const pedidosPorMesa = useMemo(() => {\n    const mesas = {};\n    for (const order of orders) {\n      var _order$table, _ref2, _order$items2;\n      const mesa = (_order$table = order.table) !== null && _order$table !== void 0 ? _order$table : order.mesa;\n      if (mesa == null) continue;\n      if (!mesas[mesa]) mesas[mesa] = [];\n      const items = (_ref2 = (_order$items2 = order.items) !== null && _order$items2 !== void 0 ? _order$items2 : order.pedidos) !== null && _ref2 !== void 0 ? _ref2 : [];\n      mesas[mesa].push(...items);\n    }\n    return mesas;\n  }, [orders]);\n  const statsLive = useMemo(() => {\n    let total = 0,\n      simples = 0,\n      dobles = 0,\n      triples = 0,\n      botellas = 0;\n    for (const order of orders) {\n      var _ref3, _order$items3;\n      const items = (_ref3 = (_order$items3 = order.items) !== null && _order$items3 !== void 0 ? _order$items3 : order.pedidos) !== null && _ref3 !== void 0 ? _ref3 : [];\n      for (const it of items) {\n        const size = (it.size || 'simple').toLowerCase();\n        const category = (it.category || '').toLowerCase();\n        const price = Number(it.price) || 0;\n        if (category === 'botellas') {\n          botellas += Number(it.quantity) || 1;\n        } else if (size === 'doble') {\n          dobles++;\n        } else if (size === 'triple') {\n          triples++;\n        } else {\n          simples++;\n        }\n        total += price;\n      }\n    }\n    return {\n      total,\n      simples,\n      dobles,\n      triples,\n      botellas\n    };\n  }, [orders]);\n  const statsLedger = ledger.totals;\n  const resetLedger = () => {\n    const empty = {\n      processedOrderIds: {},\n      totals: {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      }\n    };\n    setLedger(empty);\n    saveLedger(empty);\n  };\n\n  // ✅ Generar PDF\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(16);\n    doc.text('Historial de Ventas - Bar', 10, 10);\n    doc.setFontSize(12);\n    doc.text(`Simples: ${statsLedger.simples}`, 10, 20);\n    doc.text(`Dobles: ${statsLedger.dobles}`, 10, 30);\n    doc.text(`Triples: ${statsLedger.triples}`, 10, 40);\n    doc.text(`Botellas: ${statsLedger.botellas}`, 10, 50);\n    doc.text(`Total vendido: $${statsLedger.amount.toFixed(2)}`, 10, 60);\n    doc.save('historial_ventas_bar.pdf');\n  };\n  const mesasKeys = Object.keys(pedidosPorMesa).sort((a, b) => Number(a) - Number(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bartender-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pedidos del Bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), mesasKeys.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay pedidos a\\xFAn.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 9\n    }, this) : mesasKeys.map(mesa => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mesa-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Mesa \", mesa]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pedidosPorMesa[mesa].map((item, idx) => {\n          var _item$id;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.name, \" \", item.size ? `(${item.size})` : '', item.category === 'botellas' ? ` x${item.quantity || 1}` : '']\n          }, `${(_item$id = item.id) !== null && _item$id !== void 0 ? _item$id : item.name}-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this)]\n    }, mesa, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowStats(s => !s),\n      children: showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), showStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resumen de Ventas (Hist\\xF3rico)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Simples: \", statsLedger.simples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dobles: \", statsLedger.dobles]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Triples: \", statsLedger.triples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Botellas: \", statsLedger.botellas]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Total: $\", statsLedger.amount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: 12\n        },\n        onClick: downloadPDF,\n        children: \"\\uD83D\\uDCC4 Descargar historial en PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        style: {\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Comparar con ventas abiertas (en vivo)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Simples (vivo): \", statsLive.simples]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dobles (vivo): \", statsLive.dobles]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Triples (vivo): \", statsLive.triples]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Botellas (vivo): \", statsLive.botellas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Total (vivo): $\", statsLive.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        style: {\n          marginTop: 12\n        },\n        onClick: resetLedger,\n        children: \"Reiniciar resumen hist\\xF3rico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n};\n_s(Bartender, \"Y5irnZtJbFkOjt/et9YCCzZD7YQ=\");\n_c = Bartender;\nexport default Bartender;\nvar _c;\n$RefreshReg$(_c, \"Bartender\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","initBarSocket","jsPDF","jsxDEV","_jsxDEV","LEDGER_KEY","loadLedger","raw","localStorage","getItem","processedOrderIds","totals","simples","dobles","triples","botellas","amount","parsed","JSON","parse","saveLedger","ledger","setItem","stringify","Bartender","_s","orders","setOrders","setLedger","showStats","setShowStats","saved","foldOrdersIntoLedger","mergeUnique","incoming","prev","combined","unique","Array","from","Map","map","o","id","values","onStorage","e","key","newValue","prevIds","Set","changed","some","has","length","window","addEventListener","removeEventListener","ordersArr","isArray","next","order","_ref","_order$items","items","pedidos","it","size","toLowerCase","category","price","Number","quantity","pedidosPorMesa","mesas","_order$table","_ref2","_order$items2","mesa","table","push","statsLive","total","_ref3","_order$items3","statsLedger","resetLedger","empty","downloadPDF","doc","setFontSize","text","toFixed","save","mesasKeys","Object","keys","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","idx","_item$id","name","onClick","s","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/Correa/client/src/pages/Bartender.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { initBarSocket } from '../services/BarSocket';\r\nimport jsPDF from 'jspdf'; // ✅ Importamos jsPDF\r\n\r\nconst LEDGER_KEY = 'alcohol_sales_ledger_v1';\r\n\r\nfunction loadLedger() {\r\n  try {\r\n    const raw = localStorage.getItem(LEDGER_KEY);\r\n    if (!raw) {\r\n      return { processedOrderIds: {}, totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 } };\r\n    }\r\n    const parsed = JSON.parse(raw);\r\n    return {\r\n      processedOrderIds: parsed.processedOrderIds || {},\r\n      totals: parsed.totals || { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 },\r\n    };\r\n  } catch {\r\n    return { processedOrderIds: {}, totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 } };\r\n  }\r\n}\r\n\r\nfunction saveLedger(ledger) {\r\n  localStorage.setItem(LEDGER_KEY, JSON.stringify(ledger));\r\n}\r\n\r\nconst Bartender = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [ledger, setLedger] = useState(loadLedger());\r\n  const [showStats, setShowStats] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('alcohol_orders');\r\n    if (saved) {\r\n      try {\r\n        const parsed = JSON.parse(saved);\r\n        setOrders(parsed);\r\n        foldOrdersIntoLedger(parsed);\r\n      } catch {}\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const mergeUnique = (incoming) => {\r\n      setOrders((prev) => {\r\n        const combined = [...prev, ...incoming];\r\n        const unique = Array.from(new Map(combined.map(o => [o.id, o])).values());\r\n        localStorage.setItem('alcohol_orders', JSON.stringify(unique));\r\n        return unique;\r\n      });\r\n      foldOrdersIntoLedger(incoming);\r\n    };\r\n    initBarSocket(mergeUnique);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const onStorage = (e) => {\r\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\r\n        try {\r\n          const parsed = JSON.parse(e.newValue);\r\n          setOrders((prev) => {\r\n            const prevIds = new Set(prev.map(o => o.id));\r\n            const changed = parsed.some(o => !prevIds.has(o.id)) || prev.length !== parsed.length;\r\n            return changed ? parsed : prev;\r\n          });\r\n          foldOrdersIntoLedger(parsed);\r\n        } catch {}\r\n      }\r\n    };\r\n    window.addEventListener('storage', onStorage);\r\n    return () => window.removeEventListener('storage', onStorage);\r\n  }, []);\r\n\r\n  const foldOrdersIntoLedger = (ordersArr) => {\r\n    if (!Array.isArray(ordersArr) || ordersArr.length === 0) return;\r\n\r\n    setLedger((prev) => {\r\n      const next = {\r\n        processedOrderIds: { ...prev.processedOrderIds },\r\n        totals: { ...prev.totals },\r\n      };\r\n\r\n      let changed = false;\r\n\r\n      for (const order of ordersArr) {\r\n        if (!order?.id || next.processedOrderIds[order.id]) continue;\r\n\r\n        const items = order.items ?? order.pedidos ?? [];\r\n        for (const it of items) {\r\n          const size = (it.size || 'simple').toLowerCase();\r\n          const category = (it.category || '').toLowerCase();\r\n          const price = Number(it.price) || 0;\r\n\r\n          if (category === 'botellas') {\r\n            next.totals.botellas += Number(it.quantity) || 1;\r\n          } else if (size === 'doble') {\r\n            next.totals.dobles += 1;\r\n          } else if (size === 'triple') {\r\n            next.totals.triples += 1;\r\n          } else {\r\n            next.totals.simples += 1;\r\n          }\r\n\r\n          next.totals.amount += price;\r\n          changed = true;\r\n        }\r\n\r\n        next.processedOrderIds[order.id] = true;\r\n        changed = true;\r\n      }\r\n\r\n      if (changed) saveLedger(next);\r\n      return changed ? next : prev;\r\n    });\r\n  };\r\n\r\n  const pedidosPorMesa = useMemo(() => {\r\n    const mesas = {};\r\n    for (const order of orders) {\r\n      const mesa = order.table ?? order.mesa;\r\n      if (mesa == null) continue;\r\n      if (!mesas[mesa]) mesas[mesa] = [];\r\n      const items = order.items ?? order.pedidos ?? [];\r\n      mesas[mesa].push(...items);\r\n    }\r\n    return mesas;\r\n  }, [orders]);\r\n\r\n  const statsLive = useMemo(() => {\r\n    let total = 0, simples = 0, dobles = 0, triples = 0, botellas = 0;\r\n    for (const order of orders) {\r\n      const items = order.items ?? order.pedidos ?? [];\r\n      for (const it of items) {\r\n        const size = (it.size || 'simple').toLowerCase();\r\n        const category = (it.category || '').toLowerCase();\r\n        const price = Number(it.price) || 0;\r\n\r\n        if (category === 'botellas') {\r\n          botellas += Number(it.quantity) || 1;\r\n        } else if (size === 'doble') {\r\n          dobles++;\r\n        } else if (size === 'triple') {\r\n          triples++;\r\n        } else {\r\n          simples++;\r\n        }\r\n        total += price;\r\n      }\r\n    }\r\n    return { total, simples, dobles, triples, botellas };\r\n  }, [orders]);\r\n\r\n  const statsLedger = ledger.totals;\r\n\r\n  const resetLedger = () => {\r\n    const empty = { processedOrderIds: {}, totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 } };\r\n    setLedger(empty);\r\n    saveLedger(empty);\r\n  };\r\n\r\n  // ✅ Generar PDF\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(16);\r\n    doc.text('Historial de Ventas - Bar', 10, 10);\r\n\r\n    doc.setFontSize(12);\r\n    doc.text(`Simples: ${statsLedger.simples}`, 10, 20);\r\n    doc.text(`Dobles: ${statsLedger.dobles}`, 10, 30);\r\n    doc.text(`Triples: ${statsLedger.triples}`, 10, 40);\r\n    doc.text(`Botellas: ${statsLedger.botellas}`, 10, 50);\r\n    doc.text(`Total vendido: $${statsLedger.amount.toFixed(2)}`, 10, 60);\r\n\r\n    doc.save('historial_ventas_bar.pdf');\r\n  };\r\n\r\n  const mesasKeys = Object.keys(pedidosPorMesa).sort((a, b) => Number(a) - Number(b));\r\n\r\n  return (\r\n    <div className=\"bartender-interface\">\r\n      <h1>Pedidos del Bar</h1>\r\n\r\n      {mesasKeys.length === 0 ? (\r\n        <p>No hay pedidos aún.</p>\r\n      ) : (\r\n        mesasKeys.map((mesa) => (\r\n          <div key={mesa} className=\"mesa-section\">\r\n            <h2>Mesa {mesa}</h2>\r\n            <ul>\r\n              {pedidosPorMesa[mesa].map((item, idx) => (\r\n                <li key={`${item.id ?? item.name}-${idx}`}>\r\n                  {item.name} {item.size ? `(${item.size})` : ''}\r\n                  {item.category === 'botellas' ? ` x${item.quantity || 1}` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      <button onClick={() => setShowStats(s => !s)}>\r\n        {showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'}\r\n      </button>\r\n\r\n      {showStats && (\r\n        <div className=\"stats\">\r\n          <h3>Resumen de Ventas (Histórico)</h3>\r\n          <p>Simples: {statsLedger.simples}</p>\r\n          <p>Dobles: {statsLedger.dobles}</p>\r\n          <p>Triples: {statsLedger.triples}</p>\r\n          <p>Botellas: {statsLedger.botellas}</p>\r\n          <p><strong>Total: ${statsLedger.amount.toFixed(2)}</strong></p>\r\n\r\n          <button style={{ marginTop: 12 }} onClick={downloadPDF}>\r\n            📄 Descargar historial en PDF\r\n          </button>\r\n\r\n          <details style={{ marginTop: 12 }}>\r\n            <summary>Comparar con ventas abiertas (en vivo)</summary>\r\n            <p>Simples (vivo): {statsLive.simples}</p>\r\n            <p>Dobles (vivo): {statsLive.dobles}</p>\r\n            <p>Triples (vivo): {statsLive.triples}</p>\r\n            <p>Botellas (vivo): {statsLive.botellas}</p>\r\n            <p><strong>Total (vivo): ${statsLive.total.toFixed(2)}</strong></p>\r\n          </details>\r\n\r\n          <button className=\"remove-button\" style={{ marginTop: 12 }} onClick={resetLedger}>\r\n            Reiniciar resumen histórico\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bartender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}