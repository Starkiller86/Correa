{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\coorrea\\\\Correa\\\\client\\\\src\\\\pages\\\\KitchenInterface.jsx\",\n  _s = $RefreshSig$();\n// src/pages/KitchenInterface.jsx\nimport React, { useState, useEffect } from 'react';\nimport KitchenOrders from '../components/KitchenOrders';\nimport { initializeSocketConnection, markOrderAsCompleted, socket } from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KitchenInterface = () => {\n  _s();\n  const [pendingOrders, setPendingOrders] = useState([]);\n  const [completedOrders, setCompletedOrders] = useState([]);\n  useEffect(() => {\n    initializeSocketConnection(payload => {\n      if (payload === '__MENU_UPDATED__') return;\n      const ordersArr = Array.isArray(payload) ? payload : [];\n      const newPending = ordersArr.filter(o => o.status === 'pending');\n      const newCompleted = ordersArr.filter(o => o.status === 'completed');\n      setPendingOrders(newPending); // reemplaza (no acumula)\n      setCompletedOrders(newCompleted); // reemplaza (no revive viejos)\n    });\n  }, []);\n  const handleCompleteOrder = async orderId => {\n    try {\n      await markOrderAsCompleted(orderId);\n      // optimista\n      setPendingOrders(prev => prev.filter(o => o.id !== orderId));\n      setCompletedOrders(prev => [...prev\n      // si quieres que aparezca “al vuelo” sin esperar el broadcast:\n      // { ...prevFoundOrder, status: 'completed' }\n      ]);\n    } catch (error) {\n      console.error('Error al completar pedido:', error);\n    }\n  };\n  const handleClearAll = async () => {\n    if (!window.confirm('¿Eliminar TODOS los pedidos de la vista de cocina?')) return;\n\n    // 1) Limpiar la UI (como en Bartender)\n    setPendingOrders([]);\n    setCompletedOrders([]);\n\n    // 2) (OPCIONAL) Avisar por WS si quieres que otros clientes también limpien.\n    //    Tu server.js podría escuchar type === 'kitchen:clear_all' y hacer broadcast.\n    try {\n      socket === null || socket === void 0 ? void 0 : socket.send({\n        type: 'kitchen:clear_all'\n      });\n    } catch {/* sin drama si no hay WS */}\n\n    // 3) (OPCIONAL/si tienes API) borrar en backend:\n    // await fetch(`http://${window.location.hostname}:3001/orders`, { method: 'DELETE' })\n    // …o un endpoint que tengas para truncar órdenes.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kitchen-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kitchen-header\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        gap: 12\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"kitchen-title\",\n        children: \"Pedidos en Cocina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 8\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"secondary\",\n          onClick: () => window.location.reload(),\n          children: \"Refrescar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"danger\",\n          onClick: handleClearAll,\n          children: \"Eliminar todos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(KitchenOrders, {\n        title: \"Pedidos Pendientes\",\n        orders: pendingOrders,\n        onCompleteOrder: handleCompleteOrder,\n        showCompleteButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KitchenOrders, {\n        title: \"Pedidos Completados\",\n        orders: completedOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(KitchenInterface, \"3bs/xEX1PTKai5RSGaMIBgMZ8b8=\");\n_c = KitchenInterface;\nexport default KitchenInterface;\nvar _c;\n$RefreshReg$(_c, \"KitchenInterface\");","map":{"version":3,"names":["React","useState","useEffect","KitchenOrders","initializeSocketConnection","markOrderAsCompleted","socket","jsxDEV","_jsxDEV","KitchenInterface","_s","pendingOrders","setPendingOrders","completedOrders","setCompletedOrders","payload","ordersArr","Array","isArray","newPending","filter","o","status","newCompleted","handleCompleteOrder","orderId","prev","id","error","console","handleClearAll","window","confirm","send","type","className","children","style","display","justifyContent","alignItems","gap","fileName","_jsxFileName","lineNumber","columnNumber","onClick","location","reload","title","orders","onCompleteOrder","showCompleteButton","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/coorrea/Correa/client/src/pages/KitchenInterface.jsx"],"sourcesContent":["// src/pages/KitchenInterface.jsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport KitchenOrders from '../components/KitchenOrders';\r\nimport { initializeSocketConnection, markOrderAsCompleted, socket } from '../services/socket';\r\n\r\nconst KitchenInterface = () => {\r\n  const [pendingOrders, setPendingOrders] = useState([]);\r\n  const [completedOrders, setCompletedOrders] = useState([]);\r\n\r\n  useEffect(() => {\r\n    initializeSocketConnection((payload) => {\r\n      if (payload === '__MENU_UPDATED__') return;\r\n      const ordersArr = Array.isArray(payload) ? payload : [];\r\n      const newPending   = ordersArr.filter(o => o.status === 'pending');\r\n      const newCompleted = ordersArr.filter(o => o.status === 'completed');\r\n      setPendingOrders(newPending);      // reemplaza (no acumula)\r\n      setCompletedOrders(newCompleted);  // reemplaza (no revive viejos)\r\n    });\r\n  }, []);\r\n\r\n  const handleCompleteOrder = async (orderId) => {\r\n    try {\r\n      await markOrderAsCompleted(orderId);\r\n      // optimista\r\n      setPendingOrders(prev => prev.filter(o => o.id !== orderId));\r\n      setCompletedOrders(prev => [\r\n        ...prev,\r\n        // si quieres que aparezca “al vuelo” sin esperar el broadcast:\r\n        // { ...prevFoundOrder, status: 'completed' }\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error al completar pedido:', error);\r\n    }\r\n  };\r\n\r\n  const handleClearAll = async () => {\r\n    if (!window.confirm('¿Eliminar TODOS los pedidos de la vista de cocina?')) return;\r\n\r\n    // 1) Limpiar la UI (como en Bartender)\r\n    setPendingOrders([]);\r\n    setCompletedOrders([]);\r\n\r\n    // 2) (OPCIONAL) Avisar por WS si quieres que otros clientes también limpien.\r\n    //    Tu server.js podría escuchar type === 'kitchen:clear_all' y hacer broadcast.\r\n    try {\r\n      socket?.send({ type: 'kitchen:clear_all' });\r\n    } catch { /* sin drama si no hay WS */ }\r\n\r\n    // 3) (OPCIONAL/si tienes API) borrar en backend:\r\n    // await fetch(`http://${window.location.hostname}:3001/orders`, { method: 'DELETE' })\r\n    // …o un endpoint que tengas para truncar órdenes.\r\n  };\r\n\r\n  return (\r\n    <div className=\"kitchen-interface\">\r\n      <div className=\"kitchen-header\" style={{display:'flex',justifyContent:'space-between',alignItems:'center',gap:12}}>\r\n        <h1 className=\"kitchen-title\">Pedidos en Cocina</h1>\r\n        <div style={{display:'flex',gap:8}}>\r\n          <button className=\"secondary\" onClick={() => window.location.reload()}>Refrescar</button>\r\n          <button className=\"danger\" onClick={handleClearAll}>Eliminar todos</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"orders-container\">\r\n        <KitchenOrders\r\n          title=\"Pedidos Pendientes\"\r\n          orders={pendingOrders}\r\n          onCompleteOrder={handleCompleteOrder}\r\n          showCompleteButton\r\n        />\r\n        <KitchenOrders\r\n          title=\"Pedidos Completados\"\r\n          orders={completedOrders}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KitchenInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}