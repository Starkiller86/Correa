{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\Correa\\\\client\\\\src\\\\pages\\\\Bartender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\n// ⬇️ Usa tu socket del bar (con emit fix y listener de bar:new_order)\nimport { initBarSocket } from '../services/BarSocket';\n\n/**\r\n * Bartender escucha el namespace 'bar' por WebSocket y\r\n * mantiene el estado sincronizado con localStorage como fallback.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Bartender = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [showStats, setShowStats] = useState(false);\n\n  // ✅ Inicializa: lee localStorage una sola vez al montar\n  useEffect(() => {\n    const saved = localStorage.getItem('alcohol_orders');\n    if (saved) {\n      try {\n        setOrders(JSON.parse(saved));\n      } catch {\n        // si algo viene corrupto, lo ignoramos\n      }\n    }\n  }, []);\n\n  // ✅ Suscripción a WebSocket del bar.\n  // initBarSocket nos entregará SIEMPRE un array de órdenes nuevas o el snapshot inicial.\n  useEffect(() => {\n    const mergeUnique = incoming => {\n      setOrders(prev => {\n        const combined = [...prev, ...incoming];\n        // normaliza por id para evitar duplicados\n        const unique = Array.from(new Map(combined.map(o => [o.id, o])).values());\n        // persistimos para mantener historial entre sesiones (o por si recargan)\n        localStorage.setItem('alcohol_orders', JSON.stringify(unique));\n        return unique;\n      });\n    };\n    initBarSocket(mergeUnique); // ← escucha bar:initial_data, bar:update y bar:new_order\n\n    // No hace falta cleanup explícito porque nuestro wrapper no expone \"off\";\n    // si tuvieras \"off\", aquí lo usaríamos.\n  }, []);\n\n  // ✅ Fallback: sincroniza entre pestañas/ventanas del mismo origen.\n  // Cuando BAR (otra pestaña) actualiza localStorage, este listener nos avisa.\n  useEffect(() => {\n    const onStorage = e => {\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\n        try {\n          const parsed = JSON.parse(e.newValue);\n          setOrders(prev => {\n            // evitamos re-render innecesario si es idéntico\n            const prevIds = new Set(prev.map(o => o.id));\n            const changed = parsed.some(o => !prevIds.has(o.id)) || prev.length !== parsed.length;\n            return changed ? parsed : prev;\n          });\n        } catch {/* nada */}\n      }\n    };\n    window.addEventListener('storage', onStorage);\n    return () => window.removeEventListener('storage', onStorage);\n  }, []);\n\n  // ======= Helpers de UI =======\n\n  // Agrupa items por mesa para presentar\n  const pedidosPorMesa = useMemo(() => {\n    const mesas = {};\n    for (const order of orders) {\n      var _order$table, _ref, _order$items;\n      const mesa = (_order$table = order.table) !== null && _order$table !== void 0 ? _order$table : order.mesa; // soporta ambos nombres\n      if (mesa == null) continue;\n      if (!mesas[mesa]) mesas[mesa] = [];\n      const items = (_ref = (_order$items = order.items) !== null && _order$items !== void 0 ? _order$items : order.pedidos) !== null && _ref !== void 0 ? _ref : [];\n      mesas[mesa].push(...items);\n    }\n    return mesas;\n  }, [orders]);\n\n  // Estadísticas básicas\n  const stats = useMemo(() => {\n    let total = 0,\n      simples = 0,\n      dobles = 0,\n      triples = 0;\n    for (const order of orders) {\n      var _ref2, _order$items2;\n      const items = (_ref2 = (_order$items2 = order.items) !== null && _order$items2 !== void 0 ? _order$items2 : order.pedidos) !== null && _ref2 !== void 0 ? _ref2 : [];\n      for (const it of items) {\n        const price = Number(it.price) || 0;\n        if ((it.size || 'simple') === 'doble') dobles++;else if ((it.size || 'simple') === 'triple') triples++;else simples++;\n        total += price;\n      }\n    }\n    return {\n      total,\n      simples,\n      dobles,\n      triples\n    };\n  }, [orders]);\n\n  // ======= Render =======\n  const mesasKeys = Object.keys(pedidosPorMesa).sort((a, b) => Number(a) - Number(b));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bartender-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pedidos del Bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), mesasKeys.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No hay pedidos a\\xFAn.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this) : mesasKeys.map(mesa => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mesa-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Mesa \", mesa]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: pedidosPorMesa[mesa].map((item, idx) => {\n          var _item$id;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.name, \" \", item.size ? `(${item.size})` : '']\n          }, `${(_item$id = item.id) !== null && _item$id !== void 0 ? _item$id : item.name}-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, mesa, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowStats(s => !s),\n      children: showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), showStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resumen de Ventas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Simples: \", stats.simples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dobles: \", stats.dobles]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Triples: \", stats.triples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Total: $\", stats.total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(Bartender, \"7BuIBFkQ6SM/XeZIU/pxXhq7e5g=\");\n_c = Bartender;\nexport default Bartender;\nvar _c;\n$RefreshReg$(_c, \"Bartender\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","initBarSocket","jsxDEV","_jsxDEV","Bartender","_s","orders","setOrders","showStats","setShowStats","saved","localStorage","getItem","JSON","parse","mergeUnique","incoming","prev","combined","unique","Array","from","Map","map","o","id","values","setItem","stringify","onStorage","e","key","newValue","parsed","prevIds","Set","changed","some","has","length","window","addEventListener","removeEventListener","pedidosPorMesa","mesas","order","_order$table","_ref","_order$items","mesa","table","items","pedidos","push","stats","total","simples","dobles","triples","_ref2","_order$items2","it","price","Number","size","mesasKeys","Object","keys","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","item","idx","_item$id","name","onClick","s","toFixed","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/Correa/client/src/pages/Bartender.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\n// ⬇️ Usa tu socket del bar (con emit fix y listener de bar:new_order)\r\nimport { initBarSocket } from '../services/BarSocket';\r\n\r\n/**\r\n * Bartender escucha el namespace 'bar' por WebSocket y\r\n * mantiene el estado sincronizado con localStorage como fallback.\r\n */\r\nconst Bartender = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [showStats, setShowStats] = useState(false);\r\n\r\n  // ✅ Inicializa: lee localStorage una sola vez al montar\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('alcohol_orders');\r\n    if (saved) {\r\n      try {\r\n        setOrders(JSON.parse(saved));\r\n      } catch {\r\n        // si algo viene corrupto, lo ignoramos\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  // ✅ Suscripción a WebSocket del bar.\r\n  // initBarSocket nos entregará SIEMPRE un array de órdenes nuevas o el snapshot inicial.\r\n  useEffect(() => {\r\n    const mergeUnique = (incoming) => {\r\n      setOrders((prev) => {\r\n        const combined = [...prev, ...incoming];\r\n        // normaliza por id para evitar duplicados\r\n        const unique = Array.from(new Map(combined.map(o => [o.id, o])).values());\r\n        // persistimos para mantener historial entre sesiones (o por si recargan)\r\n        localStorage.setItem('alcohol_orders', JSON.stringify(unique));\r\n        return unique;\r\n      });\r\n    };\r\n\r\n    initBarSocket(mergeUnique); // ← escucha bar:initial_data, bar:update y bar:new_order\r\n\r\n    // No hace falta cleanup explícito porque nuestro wrapper no expone \"off\";\r\n    // si tuvieras \"off\", aquí lo usaríamos.\r\n  }, []);\r\n\r\n  // ✅ Fallback: sincroniza entre pestañas/ventanas del mismo origen.\r\n  // Cuando BAR (otra pestaña) actualiza localStorage, este listener nos avisa.\r\n  useEffect(() => {\r\n    const onStorage = (e) => {\r\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\r\n        try {\r\n          const parsed = JSON.parse(e.newValue);\r\n          setOrders((prev) => {\r\n            // evitamos re-render innecesario si es idéntico\r\n            const prevIds = new Set(prev.map(o => o.id));\r\n            const changed = parsed.some(o => !prevIds.has(o.id)) || prev.length !== parsed.length;\r\n            return changed ? parsed : prev;\r\n          });\r\n        } catch { /* nada */ }\r\n      }\r\n    };\r\n    window.addEventListener('storage', onStorage);\r\n    return () => window.removeEventListener('storage', onStorage);\r\n  }, []);\r\n\r\n  // ======= Helpers de UI =======\r\n\r\n  // Agrupa items por mesa para presentar\r\n  const pedidosPorMesa = useMemo(() => {\r\n    const mesas = {};\r\n    for (const order of orders) {\r\n      const mesa = order.table ?? order.mesa; // soporta ambos nombres\r\n      if (mesa == null) continue;\r\n      if (!mesas[mesa]) mesas[mesa] = [];\r\n      const items = order.items ?? order.pedidos ?? [];\r\n      mesas[mesa].push(...items);\r\n    }\r\n    return mesas;\r\n  }, [orders]);\r\n\r\n  // Estadísticas básicas\r\n  const stats = useMemo(() => {\r\n    let total = 0, simples = 0, dobles = 0, triples = 0;\r\n    for (const order of orders) {\r\n      const items = order.items ?? order.pedidos ?? [];\r\n      for (const it of items) {\r\n        const price = Number(it.price) || 0;\r\n        if ((it.size || 'simple') === 'doble') dobles++;\r\n        else if ((it.size || 'simple') === 'triple') triples++;\r\n        else simples++;\r\n        total += price;\r\n      }\r\n    }\r\n    return { total, simples, dobles, triples };\r\n  }, [orders]);\r\n\r\n  // ======= Render =======\r\n  const mesasKeys = Object.keys(pedidosPorMesa).sort((a, b) => Number(a) - Number(b));\r\n\r\n  return (\r\n    <div className=\"bartender-interface\">\r\n      <h1>Pedidos del Bar</h1>\r\n\r\n      {mesasKeys.length === 0 ? (\r\n        <p>No hay pedidos aún.</p>\r\n      ) : (\r\n        mesasKeys.map((mesa) => (\r\n          <div key={mesa} className=\"mesa-section\">\r\n            <h2>Mesa {mesa}</h2>\r\n            <ul>\r\n              {pedidosPorMesa[mesa].map((item, idx) => (\r\n                <li key={`${item.id ?? item.name}-${idx}`}>\r\n                  {item.name} {item.size ? `(${item.size})` : ''}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))\r\n      )}\r\n\r\n      <button onClick={() => setShowStats(s => !s)}>\r\n        {showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'}\r\n      </button>\r\n\r\n      {showStats && (\r\n        <div className=\"stats\">\r\n          <h3>Resumen de Ventas</h3>\r\n          <p>Simples: {stats.simples}</p>\r\n          <p>Dobles: {stats.dobles}</p>\r\n          <p>Triples: {stats.triples}</p>\r\n          <p><strong>Total: ${stats.total.toFixed(2)}</strong></p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bartender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}