{"ast":null,"code":"// services/BarSocket.js\n// WebSocket dedicado al BAR: solo procesa eventos \"bar:*\" y deduplica.\n\nclass BarWS {\n  static getInstance() {\n    if (!BarWS.instance) BarWS.instance = new BarWS();\n    return BarWS.instance;\n  }\n  constructor() {\n    this.ws = null;\n    this.onOrders = null; // (ordersArray) => void\n    this.retry = 0;\n    const host = window.location.hostname;\n    this.wsUrl = `ws://${host}:8080`;\n  }\n  connect() {\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) return;\n    this.ws = new WebSocket(this.wsUrl);\n    this.ws.onopen = () => {\n      this.retry = 0;\n    };\n    this.ws.onmessage = evt => {\n      var _data, _this$onOrders;\n      let data;\n      try {\n        data = JSON.parse(evt.data);\n      } catch {\n        return;\n      }\n      const type = (_data = data) === null || _data === void 0 ? void 0 : _data.type;\n      if (!type || !type.startsWith('bar:')) return; // ðŸ”’ SOLO mensajes del bar\n\n      // Normaliza a array\n      const raw = Array.isArray(data.orders) ? data.orders : Array.isArray(data.order) ? data.order : data.order ? [data.order] : [];\n      if (!raw.length) return;\n\n      // ðŸ”’ Filtra SOLO pedidos del bar + categorÃ­as permitidas\n      const allow = new Set(['tragos', 'botellas', 'cocteles', 'alcohol', 'bebidas alcohÃ³licas']);\n      const onlyBar = raw.filter(o => ((o === null || o === void 0 ? void 0 : o.source) || 'bar') === 'bar').map(o => ({\n        ...o,\n        items: (o.items || []).filter(it => allow.has((it.category || '').toLowerCase()))\n      })).filter(o => (o.items || []).length > 0);\n      if (!onlyBar.length) return;\n\n      // Dedup por id dentro del batch\n      const uniq = Array.from(new Map(onlyBar.map(o => [o.id, o])).values());\n      (_this$onOrders = this.onOrders) === null || _this$onOrders === void 0 ? void 0 : _this$onOrders.call(this, uniq);\n    };\n    this.ws.onclose = () => this.reconnect();\n    this.ws.onerror = () => this.reconnect();\n  }\n  reconnect() {\n    const delay = Math.min(1000 * 2 ** this.retry++, 30000);\n    setTimeout(() => this.connect(), delay);\n  }\n  send(payload) {\n    var _this$ws;\n    if (((_this$ws = this.ws) === null || _this$ws === void 0 ? void 0 : _this$ws.readyState) === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify(payload));\n    }\n  }\n}\nBarWS.instance = null;\nexport const initBarSocket = onOrdersArray => {\n  const inst = BarWS.getInstance();\n  inst.onOrders = onOrdersArray;\n  inst.connect();\n};\n\n// âœ… Enviar pedido del bar SOLO por WS (sin REST -> adiÃ³s 404)\nexport const placeBarOrder = async order => {\n  const inst = BarWS.getInstance();\n  const payload = {\n    ...order,\n    source: 'bar'\n  };\n  inst.send({\n    type: 'bar:new_order',\n    order: [payload]\n  });\n  return payload; // devolvemos lo enviado\n};","map":{"version":3,"names":["BarWS","getInstance","instance","constructor","ws","onOrders","retry","host","window","location","hostname","wsUrl","connect","readyState","WebSocket","OPEN","onopen","onmessage","evt","_data","_this$onOrders","data","JSON","parse","type","startsWith","raw","Array","isArray","orders","order","length","allow","Set","onlyBar","filter","o","source","map","items","it","has","category","toLowerCase","uniq","from","Map","id","values","call","onclose","reconnect","onerror","delay","Math","min","setTimeout","send","payload","_this$ws","stringify","initBarSocket","onOrdersArray","inst","placeBarOrder"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/Correa/client/src/services/BarSocket.js"],"sourcesContent":["// services/BarSocket.js\r\n// WebSocket dedicado al BAR: solo procesa eventos \"bar:*\" y deduplica.\r\n\r\nclass BarWS {\r\n  static instance = null;\r\n  static getInstance() {\r\n    if (!BarWS.instance) BarWS.instance = new BarWS();\r\n    return BarWS.instance;\r\n  }\r\n\r\n  constructor() {\r\n    this.ws = null;\r\n    this.onOrders = null; // (ordersArray) => void\r\n    this.retry = 0;\r\n    const host = window.location.hostname;\r\n    this.wsUrl = `ws://${host}:8080`;\r\n  }\r\n\r\n  connect() {\r\n    if (this.ws && this.ws.readyState === WebSocket.OPEN) return;\r\n    this.ws = new WebSocket(this.wsUrl);\r\n\r\n    this.ws.onopen = () => { this.retry = 0; };\r\n\r\n    this.ws.onmessage = (evt) => {\r\n      let data;\r\n      try { data = JSON.parse(evt.data); } catch { return; }\r\n      const type = data?.type;\r\n      if (!type || !type.startsWith('bar:')) return; // ðŸ”’ SOLO mensajes del bar\r\n\r\n      // Normaliza a array\r\n      const raw = Array.isArray(data.orders) ? data.orders\r\n               : Array.isArray(data.order)  ? data.order\r\n               : data.order ? [data.order] : [];\r\n      if (!raw.length) return;\r\n\r\n      // ðŸ”’ Filtra SOLO pedidos del bar + categorÃ­as permitidas\r\n      const allow = new Set(['tragos','botellas','cocteles','alcohol','bebidas alcohÃ³licas']);\r\n      const onlyBar = raw\r\n        .filter(o => (o?.source || 'bar') === 'bar')\r\n        .map(o => ({\r\n          ...o,\r\n          items: (o.items || []).filter(it => allow.has((it.category || '').toLowerCase()))\r\n        }))\r\n        .filter(o => (o.items || []).length > 0);\r\n\r\n      if (!onlyBar.length) return;\r\n\r\n      // Dedup por id dentro del batch\r\n      const uniq = Array.from(new Map(onlyBar.map(o => [o.id, o])).values());\r\n      this.onOrders?.(uniq);\r\n    };\r\n\r\n    this.ws.onclose = () => this.reconnect();\r\n    this.ws.onerror  = () => this.reconnect();\r\n  }\r\n\r\n  reconnect() {\r\n    const delay = Math.min(1000 * (2 ** this.retry++), 30000);\r\n    setTimeout(() => this.connect(), delay);\r\n  }\r\n\r\n  send(payload) {\r\n    if (this.ws?.readyState === WebSocket.OPEN) {\r\n      this.ws.send(JSON.stringify(payload));\r\n    }\r\n  }\r\n}\r\n\r\nexport const initBarSocket = (onOrdersArray) => {\r\n  const inst = BarWS.getInstance();\r\n  inst.onOrders = onOrdersArray;\r\n  inst.connect();\r\n};\r\n\r\n// âœ… Enviar pedido del bar SOLO por WS (sin REST -> adiÃ³s 404)\r\nexport const placeBarOrder = async (order) => {\r\n  const inst = BarWS.getInstance();\r\n  const payload = { ...order, source: 'bar' };\r\n  inst.send({ type: 'bar:new_order', order: [payload] });\r\n  return payload; // devolvemos lo enviado\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}