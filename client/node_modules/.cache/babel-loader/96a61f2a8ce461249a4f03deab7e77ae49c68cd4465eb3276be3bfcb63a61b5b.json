{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\coorrea\\\\Correa\\\\client\\\\src\\\\pages\\\\KitchenInterface.jsx\",\n  _s = $RefreshSig$();\n// src/pages/KitchenInterface.jsx\nimport React, { useEffect, useRef, useState } from 'react';\nimport KitchenOrders from '../components/KitchenOrders';\nimport { initializeSocketConnection, markOrderAsCompleted } from '../services/socket';\n\n// Claves para persistir estado local\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LS_COMPLETED_IDS = 'kitchen_completed_ids_v1'; // pedidos marcados como completados en esta UI\nconst LS_HIDDEN_COMPLETED = 'kitchen_hidden_completed_v1'; // completados ocultados con \"Eliminar completados\"\n\nconst loadIdSet = key => {\n  try {\n    return new Set(JSON.parse(localStorage.getItem(key) || '[]'));\n  } catch {\n    return new Set();\n  }\n};\nconst saveIdSet = (key, set) => {\n  localStorage.setItem(key, JSON.stringify([...set]));\n};\nconst KitchenInterface = () => {\n  _s();\n  const [pendingOrders, setPendingOrders] = useState([]);\n  const [completedOrders, setCompletedOrders] = useState([]);\n\n  // Persistentes entre refrescos\n  const completedIdsRef = useRef(loadIdSet(LS_COMPLETED_IDS));\n  const hiddenCompletedRef = useRef(loadIdSet(LS_HIDDEN_COMPLETED));\n  useEffect(() => {\n    // Suscribe al socket\n    initializeSocketConnection(payload => {\n      if (payload === '__MENU_UPDATED__') return;\n      const ordersArr = Array.isArray(payload) ? payload : [];\n\n      // 1) Si un id está en \"completedIdsRef\", lo forzamos a 'completed'\n      const normalized = ordersArr.map(o => completedIdsRef.current.has(o.id) ? {\n        ...o,\n        status: 'completed'\n      } : o);\n\n      // 2) Construimos listas reemplazando por lo recién llegado\n      const nextPending = normalized.filter(o => o.status === 'pending');\n      const nextCompleted = normalized.filter(o => o.status === 'completed')\n      // 3) Si un completado fue \"eliminado de la vista\", no lo mostramos\n      .filter(o => !hiddenCompletedRef.current.has(o.id));\n      setPendingOrders(nextPending);\n      setCompletedOrders(nextCompleted);\n    });\n  }, []);\n  const handleCompleteOrder = async orderId => {\n    try {\n      // Marca en backend\n      await markOrderAsCompleted(orderId);\n\n      // Optimista: sácalo de pendientes\n      setPendingOrders(prev => prev.filter(o => o.id !== orderId));\n\n      // Guarda override local para que nunca vuelva como 'pending' tras refrescar\n      completedIdsRef.current.add(orderId);\n      saveIdSet(LS_COMPLETED_IDS, completedIdsRef.current);\n    } catch (error) {\n      console.error('Error al completar pedido:', error);\n    }\n  };\n  const handleClearCompleted = () => {\n    if (!completedOrders.length) return;\n    const ok = window.confirm('¿Eliminar de la vista todos los pedidos completados?');\n    if (!ok) return;\n\n    // Oculta de la vista y persiste los IDs como \"hidden\"\n    for (const o of completedOrders) hiddenCompletedRef.current.add(o.id);\n    saveIdSet(LS_HIDDEN_COMPLETED, hiddenCompletedRef.current);\n    setCompletedOrders([]);\n  };\n  const handleRefresh = () => {\n    // Limpia solo el filtro de ocultos (para volver a ver los completados)\n    hiddenCompletedRef.current.clear();\n    saveIdSet(LS_HIDDEN_COMPLETED, hiddenCompletedRef.current);\n    alert('Filtro de completados eliminado. Se mostrarán de nuevo en la próxima actualización.');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kitchen-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"kitchen-header\",\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"kitchen-title\",\n        children: \"Pedidos en Cocina\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleRefresh,\n          children: \"Refrescar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleClearCompleted,\n          children: \"Eliminar completados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"orders-container\",\n      children: [/*#__PURE__*/_jsxDEV(KitchenOrders, {\n        title: \"Pedidos Pendientes\",\n        orders: pendingOrders,\n        onCompleteOrder: handleCompleteOrder,\n        showCompleteButton: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(KitchenOrders, {\n        title: \"Pedidos Completados\",\n        orders: completedOrders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(KitchenInterface, \"SZ2HcfdXOZNuKh2r92IvDbQoFZs=\");\n_c = KitchenInterface;\nexport default KitchenInterface;\nvar _c;\n$RefreshReg$(_c, \"KitchenInterface\");","map":{"version":3,"names":["React","useEffect","useRef","useState","KitchenOrders","initializeSocketConnection","markOrderAsCompleted","jsxDEV","_jsxDEV","LS_COMPLETED_IDS","LS_HIDDEN_COMPLETED","loadIdSet","key","Set","JSON","parse","localStorage","getItem","saveIdSet","set","setItem","stringify","KitchenInterface","_s","pendingOrders","setPendingOrders","completedOrders","setCompletedOrders","completedIdsRef","hiddenCompletedRef","payload","ordersArr","Array","isArray","normalized","map","o","current","has","id","status","nextPending","filter","nextCompleted","handleCompleteOrder","orderId","prev","add","error","console","handleClearCompleted","length","ok","window","confirm","handleRefresh","clear","alert","className","children","style","display","justifyContent","alignItems","fileName","_jsxFileName","lineNumber","columnNumber","gap","onClick","title","orders","onCompleteOrder","showCompleteButton","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/coorrea/Correa/client/src/pages/KitchenInterface.jsx"],"sourcesContent":["// src/pages/KitchenInterface.jsx\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport KitchenOrders from '../components/KitchenOrders';\r\nimport { initializeSocketConnection, markOrderAsCompleted } from '../services/socket';\r\n\r\n// Claves para persistir estado local\r\nconst LS_COMPLETED_IDS = 'kitchen_completed_ids_v1';     // pedidos marcados como completados en esta UI\r\nconst LS_HIDDEN_COMPLETED = 'kitchen_hidden_completed_v1'; // completados ocultados con \"Eliminar completados\"\r\n\r\nconst loadIdSet = (key) => {\r\n  try { return new Set(JSON.parse(localStorage.getItem(key) || '[]')); }\r\n  catch { return new Set(); }\r\n};\r\nconst saveIdSet = (key, set) => {\r\n  localStorage.setItem(key, JSON.stringify([...set]));\r\n};\r\n\r\nconst KitchenInterface = () => {\r\n  const [pendingOrders, setPendingOrders] = useState([]);\r\n  const [completedOrders, setCompletedOrders] = useState([]);\r\n\r\n  // Persistentes entre refrescos\r\n  const completedIdsRef = useRef(loadIdSet(LS_COMPLETED_IDS));\r\n  const hiddenCompletedRef = useRef(loadIdSet(LS_HIDDEN_COMPLETED));\r\n\r\n  useEffect(() => {\r\n    // Suscribe al socket\r\n    initializeSocketConnection((payload) => {\r\n      if (payload === '__MENU_UPDATED__') return;\r\n\r\n      const ordersArr = Array.isArray(payload) ? payload : [];\r\n\r\n      // 1) Si un id está en \"completedIdsRef\", lo forzamos a 'completed'\r\n      const normalized = ordersArr.map(o =>\r\n        completedIdsRef.current.has(o.id) ? { ...o, status: 'completed' } : o\r\n      );\r\n\r\n      // 2) Construimos listas reemplazando por lo recién llegado\r\n      const nextPending = normalized.filter(o => o.status === 'pending');\r\n\r\n      const nextCompleted = normalized\r\n        .filter(o => o.status === 'completed')\r\n        // 3) Si un completado fue \"eliminado de la vista\", no lo mostramos\r\n        .filter(o => !hiddenCompletedRef.current.has(o.id));\r\n\r\n      setPendingOrders(nextPending);\r\n      setCompletedOrders(nextCompleted);\r\n    });\r\n  }, []);\r\n\r\n  const handleCompleteOrder = async (orderId) => {\r\n    try {\r\n      // Marca en backend\r\n      await markOrderAsCompleted(orderId);\r\n\r\n      // Optimista: sácalo de pendientes\r\n      setPendingOrders(prev => prev.filter(o => o.id !== orderId));\r\n\r\n      // Guarda override local para que nunca vuelva como 'pending' tras refrescar\r\n      completedIdsRef.current.add(orderId);\r\n      saveIdSet(LS_COMPLETED_IDS, completedIdsRef.current);\r\n    } catch (error) {\r\n      console.error('Error al completar pedido:', error);\r\n    }\r\n  };\r\n\r\n  const handleClearCompleted = () => {\r\n    if (!completedOrders.length) return;\r\n    const ok = window.confirm('¿Eliminar de la vista todos los pedidos completados?');\r\n    if (!ok) return;\r\n\r\n    // Oculta de la vista y persiste los IDs como \"hidden\"\r\n    for (const o of completedOrders) hiddenCompletedRef.current.add(o.id);\r\n    saveIdSet(LS_HIDDEN_COMPLETED, hiddenCompletedRef.current);\r\n    setCompletedOrders([]);\r\n  };\r\n\r\n  const handleRefresh = () => {\r\n    // Limpia solo el filtro de ocultos (para volver a ver los completados)\r\n    hiddenCompletedRef.current.clear();\r\n    saveIdSet(LS_HIDDEN_COMPLETED, hiddenCompletedRef.current);\r\n    alert('Filtro de completados eliminado. Se mostrarán de nuevo en la próxima actualización.');\r\n  };\r\n\r\n  return (\r\n    <div className=\"kitchen-interface\">\r\n      <div className=\"kitchen-header\" style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n        <h1 className=\"kitchen-title\">Pedidos en Cocina</h1>\r\n        <div style={{ display: 'flex', gap: 12 }}>\r\n          <button onClick={handleRefresh}>Refrescar</button>\r\n          <button onClick={handleClearCompleted}>Eliminar completados</button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"orders-container\">\r\n        <KitchenOrders\r\n          title=\"Pedidos Pendientes\"\r\n          orders={pendingOrders}\r\n          onCompleteOrder={handleCompleteOrder}\r\n          showCompleteButton\r\n        />\r\n        <KitchenOrders\r\n          title=\"Pedidos Completados\"\r\n          orders={completedOrders}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default KitchenInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}