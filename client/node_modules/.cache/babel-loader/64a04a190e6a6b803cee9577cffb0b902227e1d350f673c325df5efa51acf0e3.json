{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\coorrea\\\\Correa\\\\client\\\\src\\\\pages\\\\Bartender.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Bartender.jsx\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { initBarSocket } from '../services/BarSocket';\nimport jsPDF from 'jspdf';\nimport 'jspdf-autotable';\nimport './bartender.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LEDGER_KEY = 'alcohol_sales_ledger_v1';\n\n/* ===================== Helpers de deduplicación ===================== */\n// Firma estable del pedido (mesa + timestamp truncado + items)\nconst orderSignature = o => {\n  var _o$table;\n  return JSON.stringify({\n    t: (_o$table = o.table) !== null && _o$table !== void 0 ? _o$table : o.mesa,\n    ts: (o.timestamp || '').slice(0, 19),\n    // hasta segundos\n    items: (o.items || o.pedidos || []).map(it => ({\n      n: it === null || it === void 0 ? void 0 : it.name,\n      s: (it === null || it === void 0 ? void 0 : it.size) || '',\n      q: (it === null || it === void 0 ? void 0 : it.quantity) || 1,\n      c: ((it === null || it === void 0 ? void 0 : it.category) || '').toLowerCase(),\n      p: Number(it === null || it === void 0 ? void 0 : it.price) || 0\n    }))\n  });\n};\n\n// Dedup por id y por firma; preserva \"completed\"\nconst dedupOrders = (arr = []) => {\n  const byId = new Map();\n  const signatures = new Map(); // sig -> id (para fusionar completed)\n\n  for (const raw of arr) {\n    if (!raw) continue;\n    // Solo pedidos del bar\n    if (((raw === null || raw === void 0 ? void 0 : raw.source) || 'bar') !== 'bar') continue;\n    const o = {\n      ...raw,\n      completed: !!raw.completed\n    };\n    const sig = orderSignature(o);\n\n    // Si ya tenemos la firma, fusiona completed y salta\n    if (signatures.has(sig)) {\n      const existingId = signatures.get(sig);\n      const existing = byId.get(existingId);\n      if (existing) existing.completed = existing.completed || o.completed;\n      continue;\n    }\n\n    // Si ya existe por id, fusiona (conserva completed)\n    if (byId.has(o.id)) {\n      const prev = byId.get(o.id);\n      byId.set(o.id, {\n        ...prev,\n        ...o,\n        completed: prev.completed || o.completed\n      });\n    } else {\n      byId.set(o.id, o);\n    }\n\n    // Marca firma\n    if (!signatures.has(sig)) signatures.set(sig, o.id);\n  }\n  return [...byId.values()];\n};\n\n/* ===================== Ledger (histórico) ===================== */\nfunction loadLedger() {\n  try {\n    const raw = localStorage.getItem(LEDGER_KEY);\n    if (!raw) {\n      return {\n        processedOrderIds: {},\n        totals: {\n          simples: 0,\n          dobles: 0,\n          triples: 0,\n          botellas: 0,\n          amount: 0\n        },\n        entries: [] // << guarda cada línea vendida\n      };\n    }\n    const parsed = JSON.parse(raw);\n    return {\n      processedOrderIds: parsed.processedOrderIds || {},\n      totals: parsed.totals || {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      },\n      entries: Array.isArray(parsed.entries) ? parsed.entries : []\n    };\n  } catch {\n    return {\n      processedOrderIds: {},\n      totals: {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      },\n      entries: []\n    };\n  }\n}\nfunction saveLedger(ledger) {\n  localStorage.setItem(LEDGER_KEY, JSON.stringify(ledger));\n}\n\n/* ===================== Helpers PDF ===================== */\nconst money = n => (Number(n) || 0).toFixed(2);\nconst fecha = iso => {\n  const d = new Date(iso);\n  return isNaN(d) ? '' : d.toLocaleDateString();\n};\nconst hora = iso => {\n  const d = new Date(iso);\n  return isNaN(d) ? '' : d.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\nconst tipoHumano = e => {\n  if ((e.category || '').toLowerCase() === 'botellas') return `Botella x${Number(e.quantity || 1)}`;\n  const s = String(e.size || 'simple').toLowerCase();\n  if (s === 'doble') return 'Doble';\n  if (s === 'triple') return 'Triple';\n  return 'Simple';\n};\nconst Bartender = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [ledger, setLedger] = useState(loadLedger());\n  const [showStats, setShowStats] = useState(false);\n\n  /* ========= Carga inicial (solo BAR) + dedup ========= */\n  useEffect(() => {\n    const saved = localStorage.getItem('alcohol_orders');\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved).filter(o => ((o === null || o === void 0 ? void 0 : o.source) || 'bar') === 'bar');\n        const clean = dedupOrders(parsed);\n        localStorage.setItem('alcohol_orders', JSON.stringify(clean));\n        setOrders(clean);\n        foldOrdersIntoLedger(clean);\n      } catch {}\n    }\n  }, []);\n\n  /* ========= WS del BAR con merge anti-duplicados ========= */\n  useEffect(() => {\n    const mergeUnique = incoming => {\n      const onlyBar = (incoming || []).filter(o => ((o === null || o === void 0 ? void 0 : o.source) || 'bar') === 'bar');\n      if (!onlyBar.length) return;\n      setOrders(prev => {\n        const next = dedupOrders([...prev, ...onlyBar]);\n        localStorage.setItem('alcohol_orders', JSON.stringify(next));\n        return next;\n      });\n\n      // Plegamos al ledger solo lo nuevo\n      foldOrdersIntoLedger(onlyBar);\n    };\n    initBarSocket(mergeUnique);\n  }, []);\n\n  /* ========= Sync entre pestañas (también dedup) ========= */\n  useEffect(() => {\n    const onStorage = e => {\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\n        try {\n          const parsed = JSON.parse(e.newValue).filter(o => ((o === null || o === void 0 ? void 0 : o.source) || 'bar') === 'bar');\n          const clean = dedupOrders(parsed);\n          setOrders(clean);\n          foldOrdersIntoLedger(clean);\n        } catch {}\n      }\n    };\n    window.addEventListener('storage', onStorage);\n    return () => window.removeEventListener('storage', onStorage);\n  }, []);\n\n  /* ========= Plegado al ledger (graba líneas históricas) ========= */\n  const foldOrdersIntoLedger = ordersArr => {\n    if (!Array.isArray(ordersArr) || ordersArr.length === 0) return;\n    setLedger(prev => {\n      const next = {\n        processedOrderIds: {\n          ...prev.processedOrderIds\n        },\n        totals: {\n          ...prev.totals\n        },\n        entries: [...prev.entries]\n      };\n      let changed = false;\n      for (const order of ordersArr) {\n        var _ref, _order$items;\n        if (!(order !== null && order !== void 0 && order.id) || ((order === null || order === void 0 ? void 0 : order.source) || 'bar') !== 'bar' || next.processedOrderIds[order.id]) continue;\n        const items = (_ref = (_order$items = order.items) !== null && _order$items !== void 0 ? _order$items : order.pedidos) !== null && _ref !== void 0 ? _ref : [];\n        for (const it of items) {\n          const size = (it.size || 'simple').toLowerCase();\n          const category = (it.category || '').toLowerCase();\n          const price = Number(it.price) || 0;\n\n          // Totales\n          if (category === 'botellas') next.totals.botellas += Number(it.quantity) || 1;else if (size === 'doble') next.totals.dobles += 1;else if (size === 'triple') next.totals.triples += 1;else next.totals.simples += 1;\n          next.totals.amount += price;\n\n          // Entrada histórica (línea)\n          next.entries.push({\n            name: it.name || '',\n            price,\n            timestamp: order.timestamp,\n            size: it.size || 'simple',\n            category: it.category || '',\n            quantity: it.quantity || 1\n          });\n          changed = true;\n          // fin por ítem\n        }\n        next.processedOrderIds[order.id] = true;\n      }\n      if (changed) saveLedger(next);\n      return changed ? next : prev;\n    });\n  };\n\n  /* ========= Stats en vivo (abiertas) ========= */\n  const statsLive = useMemo(() => {\n    let total = 0,\n      simples = 0,\n      dobles = 0,\n      triples = 0,\n      botellas = 0;\n    for (const order of orders) {\n      var _ref2, _order$items2;\n      const items = (_ref2 = (_order$items2 = order.items) !== null && _order$items2 !== void 0 ? _order$items2 : order.pedidos) !== null && _ref2 !== void 0 ? _ref2 : [];\n      for (const it of items) {\n        const size = (it.size || 'simple').toLowerCase();\n        const category = (it.category || '').toLowerCase();\n        const price = Number(it.price) || 0;\n        if (category === 'botellas') botellas += Number(it.quantity) || 1;else if (size === 'doble') dobles++;else if (size === 'triple') triples++;else simples++;\n        total += price;\n      }\n    }\n    return {\n      total,\n      simples,\n      dobles,\n      triples,\n      botellas\n    };\n  }, [orders]);\n  const statsLedger = ledger.totals;\n  const resetLedger = () => {\n    const empty = {\n      processedOrderIds: {},\n      totals: {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      },\n      entries: []\n    };\n    setLedger(empty);\n    saveLedger(empty);\n  };\n  const markAsCompleted = orderId => {\n    setOrders(prev => {\n      const updated = prev.map(o => o.id === orderId ? {\n        ...o,\n        completed: true\n      } : o);\n      localStorage.setItem('alcohol_orders', JSON.stringify(updated));\n      return updated;\n    });\n  };\n  const clearCompletedOrders = () => {\n    setOrders(prev => {\n      const updated = prev.filter(o => !o.completed);\n      localStorage.setItem('alcohol_orders', JSON.stringify(updated));\n      return updated;\n    });\n  };\n\n  /* ========= PDF: tabla con Ítem, Precio, Fecha, Hora, Tipo + TOTAL ========= */\n  const downloadPDF = () => {\n    const doc = new jsPDF('p', 'pt');\n    const ahora = new Date();\n    const fechaDescarga = ahora.toLocaleString();\n\n    // Encabezado\n    doc.setFontSize(16);\n    doc.text('Historial de Ventas - Bar', 40, 40);\n    doc.setFontSize(10);\n    doc.text(`Generado: ${fechaDescarga}`, 40, 58);\n\n    // Histórico\n    const entries = Array.isArray(ledger.entries) ? ledger.entries : [];\n    const sorted = [...entries].sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\n    const rows = sorted.map(e => [e.name, `$ ${money(e.price)}`, fecha(e.timestamp), hora(e.timestamp), tipoHumano(e)]);\n    const total = sorted.reduce((acc, e) => acc + (Number(e.price) || 0), 0);\n    doc.autoTable({\n      startY: 80,\n      head: [['Ítem', 'Precio', 'Fecha', 'Hora', 'Tipo']],\n      body: rows,\n      styles: {\n        fontSize: 10,\n        cellPadding: 6\n      },\n      headStyles: {\n        fillColor: [60, 80, 255]\n      },\n      columnStyles: {\n        0: {\n          cellWidth: 220\n        },\n        1: {\n          halign: 'right',\n          cellWidth: 80\n        },\n        2: {\n          cellWidth: 90\n        },\n        3: {\n          cellWidth: 70\n        },\n        4: {\n          cellWidth: 90\n        }\n      },\n      foot: [[{\n        content: 'TOTAL',\n        colSpan: 1\n      }, {\n        content: `$ ${money(total)}`,\n        styles: {\n          halign: 'right'\n        }\n      }, {\n        content: '',\n        colSpan: 3\n      }]],\n      footStyles: {\n        fillColor: [240, 240, 240],\n        textColor: [0, 0, 0],\n        fontStyle: 'bold'\n      },\n      didParseCell: data => {\n        if (data.section === 'foot' && data.column.index > 1) data.cell.text = [''];\n      }\n    });\n    doc.save(`ventas_bar_${ahora.toISOString().slice(0, 10)}.pdf`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bartender-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pedidos del Bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pedidos-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columna\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Pedidos Pendientes (\", orders.filter(o => !o.completed).length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), orders.filter(o => !o.completed).map((order, idx) => {\n          var _order$table, _order$time, _order$items3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pedido-card pendiente\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pedido-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Mesa \", (_order$table = order.table) !== null && _order$table !== void 0 ? _order$table : order.mesa]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_order$time = order.time) !== null && _order$time !== void 0 ? _order$time : new Date(order.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pedido-items\",\n              children: (_order$items3 = order.items) === null || _order$items3 === void 0 ? void 0 : _order$items3.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [item.name, \" \", item.size ? `(${item.size})` : '', item.category === 'botellas' ? ` x${item.quantity || 1}` : '']\n              }, `${order.id}-item-${i}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-completar\",\n              onClick: () => markAsCompleted(order.id),\n              children: \"Marcar como Completado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 17\n            }, this)]\n          }, `${order.id}-pend-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columna\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Pedidos Completados (\", orders.filter(o => o.completed).length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), orders.filter(o => o.completed).map((order, idx) => {\n          var _order$table2, _order$time2, _order$items4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pedido-card completado\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pedido-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Mesa \", (_order$table2 = order.table) !== null && _order$table2 !== void 0 ? _order$table2 : order.mesa]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_order$time2 = order.time) !== null && _order$time2 !== void 0 ? _order$time2 : new Date(order.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 356,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pedido-items\",\n              children: (_order$items4 = order.items) === null || _order$items4 === void 0 ? void 0 : _order$items4.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [item.name, \" \", item.size ? `(${item.size})` : '', item.category === 'botellas' ? ` x${item.quantity || 1}` : '']\n              }, `${order.id}-compitem-${i}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, `${order.id}-comp-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 15\n          }, this);\n        }), orders.some(o => o.completed) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-eliminar\",\n          onClick: clearCompletedOrders,\n          children: \"\\uD83D\\uDDD1 Eliminar todas las completadas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowStats(s => !s),\n      children: showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 7\n    }, this), showStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resumen de Ventas (Hist\\xF3rico)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Simples: \", statsLedger.simples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dobles: \", statsLedger.dobles]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Triples: \", statsLedger.triples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Botellas: \", statsLedger.botellas]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Total: $\", statsLedger.amount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: 12\n        },\n        onClick: downloadPDF,\n        children: \"\\uD83D\\uDCC4 Descargar historial en PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        style: {\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Comparar con ventas abiertas (en vivo)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Simples (vivo): \", statsLive.simples]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dobles (vivo): \", statsLive.dobles]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Triples (vivo): \", statsLive.triples]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Botellas (vivo): \", statsLive.botellas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Total (vivo): $\", statsLive.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        style: {\n          marginTop: 12\n        },\n        onClick: resetLedger,\n        children: \"Reiniciar resumen hist\\xF3rico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 319,\n    columnNumber: 5\n  }, this);\n};\n_s(Bartender, \"Sn1OyphKlUMDjppEPlNeoqH3OJw=\");\n_c = Bartender;\nexport default Bartender;\nvar _c;\n$RefreshReg$(_c, \"Bartender\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","initBarSocket","jsPDF","jsxDEV","_jsxDEV","LEDGER_KEY","orderSignature","o","_o$table","JSON","stringify","t","table","mesa","ts","timestamp","slice","items","pedidos","map","it","n","name","s","size","q","quantity","c","category","toLowerCase","p","Number","price","dedupOrders","arr","byId","Map","signatures","raw","source","completed","sig","has","existingId","get","existing","id","prev","set","values","loadLedger","localStorage","getItem","processedOrderIds","totals","simples","dobles","triples","botellas","amount","entries","parsed","parse","Array","isArray","saveLedger","ledger","setItem","money","toFixed","fecha","iso","d","Date","isNaN","toLocaleDateString","hora","toLocaleTimeString","hour","minute","tipoHumano","e","String","Bartender","_s","orders","setOrders","setLedger","showStats","setShowStats","saved","filter","clean","foldOrdersIntoLedger","mergeUnique","incoming","onlyBar","length","next","onStorage","key","newValue","window","addEventListener","removeEventListener","ordersArr","changed","order","_ref","_order$items","push","statsLive","total","_ref2","_order$items2","statsLedger","resetLedger","empty","markAsCompleted","orderId","updated","clearCompletedOrders","downloadPDF","doc","ahora","fechaDescarga","toLocaleString","setFontSize","text","sorted","sort","a","b","rows","reduce","acc","autoTable","startY","head","body","styles","fontSize","cellPadding","headStyles","fillColor","columnStyles","cellWidth","halign","foot","content","colSpan","footStyles","textColor","fontStyle","didParseCell","data","section","column","index","cell","save","toISOString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","_order$table","_order$time","_order$items3","time","item","i","onClick","_order$table2","_order$time2","_order$items4","some","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/coorrea/Correa/client/src/pages/Bartender.jsx"],"sourcesContent":["// src/pages/Bartender.jsx\r\nimport React, { useEffect, useMemo, useState } from 'react';\r\nimport { initBarSocket } from '../services/BarSocket';\r\nimport jsPDF from 'jspdf';\r\nimport 'jspdf-autotable';\r\nimport './bartender.css';\r\n\r\nconst LEDGER_KEY = 'alcohol_sales_ledger_v1';\r\n\r\n/* ===================== Helpers de deduplicación ===================== */\r\n// Firma estable del pedido (mesa + timestamp truncado + items)\r\nconst orderSignature = (o) =>\r\n  JSON.stringify({\r\n    t: o.table ?? o.mesa,\r\n    ts: (o.timestamp || '').slice(0, 19), // hasta segundos\r\n    items: (o.items || o.pedidos || []).map((it) => ({\r\n      n: it?.name,\r\n      s: it?.size || '',\r\n      q: it?.quantity || 1,\r\n      c: (it?.category || '').toLowerCase(),\r\n      p: Number(it?.price) || 0,\r\n    })),\r\n  });\r\n\r\n// Dedup por id y por firma; preserva \"completed\"\r\nconst dedupOrders = (arr = []) => {\r\n  const byId = new Map();\r\n  const signatures = new Map(); // sig -> id (para fusionar completed)\r\n\r\n  for (const raw of arr) {\r\n    if (!raw) continue;\r\n    // Solo pedidos del bar\r\n    if ((raw?.source || 'bar') !== 'bar') continue;\r\n\r\n    const o = { ...raw, completed: !!raw.completed };\r\n    const sig = orderSignature(o);\r\n\r\n    // Si ya tenemos la firma, fusiona completed y salta\r\n    if (signatures.has(sig)) {\r\n      const existingId = signatures.get(sig);\r\n      const existing = byId.get(existingId);\r\n      if (existing) existing.completed = existing.completed || o.completed;\r\n      continue;\r\n    }\r\n\r\n    // Si ya existe por id, fusiona (conserva completed)\r\n    if (byId.has(o.id)) {\r\n      const prev = byId.get(o.id);\r\n      byId.set(o.id, { ...prev, ...o, completed: prev.completed || o.completed });\r\n    } else {\r\n      byId.set(o.id, o);\r\n    }\r\n\r\n    // Marca firma\r\n    if (!signatures.has(sig)) signatures.set(sig, o.id);\r\n  }\r\n\r\n  return [...byId.values()];\r\n};\r\n\r\n/* ===================== Ledger (histórico) ===================== */\r\nfunction loadLedger() {\r\n  try {\r\n    const raw = localStorage.getItem(LEDGER_KEY);\r\n    if (!raw) {\r\n      return {\r\n        processedOrderIds: {},\r\n        totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 },\r\n        entries: [], // << guarda cada línea vendida\r\n      };\r\n    }\r\n    const parsed = JSON.parse(raw);\r\n    return {\r\n      processedOrderIds: parsed.processedOrderIds || {},\r\n      totals:\r\n        parsed.totals || { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 },\r\n      entries: Array.isArray(parsed.entries) ? parsed.entries : [],\r\n    };\r\n  } catch {\r\n    return {\r\n      processedOrderIds: {},\r\n      totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 },\r\n      entries: [],\r\n    };\r\n  }\r\n}\r\n\r\nfunction saveLedger(ledger) {\r\n  localStorage.setItem(LEDGER_KEY, JSON.stringify(ledger));\r\n}\r\n\r\n/* ===================== Helpers PDF ===================== */\r\nconst money = (n) => (Number(n) || 0).toFixed(2);\r\nconst fecha = (iso) => {\r\n  const d = new Date(iso);\r\n  return isNaN(d) ? '' : d.toLocaleDateString();\r\n};\r\nconst hora = (iso) => {\r\n  const d = new Date(iso);\r\n  return isNaN(d) ? '' : d.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\r\n};\r\nconst tipoHumano = (e) => {\r\n  if ((e.category || '').toLowerCase() === 'botellas') return `Botella x${Number(e.quantity || 1)}`;\r\n  const s = String(e.size || 'simple').toLowerCase();\r\n  if (s === 'doble') return 'Doble';\r\n  if (s === 'triple') return 'Triple';\r\n  return 'Simple';\r\n};\r\n\r\nconst Bartender = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [ledger, setLedger] = useState(loadLedger());\r\n  const [showStats, setShowStats] = useState(false);\r\n\r\n  /* ========= Carga inicial (solo BAR) + dedup ========= */\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('alcohol_orders');\r\n    if (saved) {\r\n      try {\r\n        const parsed = JSON.parse(saved).filter((o) => (o?.source || 'bar') === 'bar');\r\n        const clean = dedupOrders(parsed);\r\n        localStorage.setItem('alcohol_orders', JSON.stringify(clean));\r\n        setOrders(clean);\r\n        foldOrdersIntoLedger(clean);\r\n      } catch {}\r\n    }\r\n  }, []);\r\n\r\n  /* ========= WS del BAR con merge anti-duplicados ========= */\r\n  useEffect(() => {\r\n    const mergeUnique = (incoming) => {\r\n      const onlyBar = (incoming || []).filter((o) => (o?.source || 'bar') === 'bar');\r\n      if (!onlyBar.length) return;\r\n\r\n      setOrders((prev) => {\r\n        const next = dedupOrders([...prev, ...onlyBar]);\r\n        localStorage.setItem('alcohol_orders', JSON.stringify(next));\r\n        return next;\r\n      });\r\n\r\n      // Plegamos al ledger solo lo nuevo\r\n      foldOrdersIntoLedger(onlyBar);\r\n    };\r\n    initBarSocket(mergeUnique);\r\n  }, []);\r\n\r\n  /* ========= Sync entre pestañas (también dedup) ========= */\r\n  useEffect(() => {\r\n    const onStorage = (e) => {\r\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\r\n        try {\r\n          const parsed = JSON.parse(e.newValue).filter((o) => (o?.source || 'bar') === 'bar');\r\n          const clean = dedupOrders(parsed);\r\n          setOrders(clean);\r\n          foldOrdersIntoLedger(clean);\r\n        } catch {}\r\n      }\r\n    };\r\n    window.addEventListener('storage', onStorage);\r\n    return () => window.removeEventListener('storage', onStorage);\r\n  }, []);\r\n\r\n  /* ========= Plegado al ledger (graba líneas históricas) ========= */\r\n  const foldOrdersIntoLedger = (ordersArr) => {\r\n    if (!Array.isArray(ordersArr) || ordersArr.length === 0) return;\r\n\r\n    setLedger((prev) => {\r\n      const next = {\r\n        processedOrderIds: { ...prev.processedOrderIds },\r\n        totals: { ...prev.totals },\r\n        entries: [...prev.entries],\r\n      };\r\n\r\n      let changed = false;\r\n\r\n      for (const order of ordersArr) {\r\n        if (\r\n          !order?.id ||\r\n          (order?.source || 'bar') !== 'bar' ||\r\n          next.processedOrderIds[order.id]\r\n        )\r\n          continue;\r\n\r\n        const items = order.items ?? order.pedidos ?? [];\r\n        for (const it of items) {\r\n          const size = (it.size || 'simple').toLowerCase();\r\n          const category = (it.category || '').toLowerCase();\r\n          const price = Number(it.price) || 0;\r\n\r\n          // Totales\r\n          if (category === 'botellas') next.totals.botellas += Number(it.quantity) || 1;\r\n          else if (size === 'doble') next.totals.dobles += 1;\r\n          else if (size === 'triple') next.totals.triples += 1;\r\n          else next.totals.simples += 1;\r\n          next.totals.amount += price;\r\n\r\n          // Entrada histórica (línea)\r\n          next.entries.push({\r\n            name: it.name || '',\r\n            price,\r\n            timestamp: order.timestamp,\r\n            size: it.size || 'simple',\r\n            category: it.category || '',\r\n            quantity: it.quantity || 1,\r\n          });\r\n          changed = true;\r\n          // fin por ítem\r\n        }\r\n\r\n        next.processedOrderIds[order.id] = true;\r\n      }\r\n\r\n      if (changed) saveLedger(next);\r\n      return changed ? next : prev;\r\n    });\r\n  };\r\n\r\n  /* ========= Stats en vivo (abiertas) ========= */\r\n  const statsLive = useMemo(() => {\r\n    let total = 0,\r\n      simples = 0,\r\n      dobles = 0,\r\n      triples = 0,\r\n      botellas = 0;\r\n    for (const order of orders) {\r\n      const items = order.items ?? order.pedidos ?? [];\r\n      for (const it of items) {\r\n        const size = (it.size || 'simple').toLowerCase();\r\n        const category = (it.category || '').toLowerCase();\r\n        const price = Number(it.price) || 0;\r\n        if (category === 'botellas') botellas += Number(it.quantity) || 1;\r\n        else if (size === 'doble') dobles++;\r\n        else if (size === 'triple') triples++;\r\n        else simples++;\r\n        total += price;\r\n      }\r\n    }\r\n    return { total, simples, dobles, triples, botellas };\r\n  }, [orders]);\r\n\r\n  const statsLedger = ledger.totals;\r\n\r\n  const resetLedger = () => {\r\n    const empty = {\r\n      processedOrderIds: {},\r\n      totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 },\r\n      entries: [],\r\n    };\r\n    setLedger(empty);\r\n    saveLedger(empty);\r\n  };\r\n\r\n  const markAsCompleted = (orderId) => {\r\n    setOrders((prev) => {\r\n      const updated = prev.map((o) => (o.id === orderId ? { ...o, completed: true } : o));\r\n      localStorage.setItem('alcohol_orders', JSON.stringify(updated));\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const clearCompletedOrders = () => {\r\n    setOrders((prev) => {\r\n      const updated = prev.filter((o) => !o.completed);\r\n      localStorage.setItem('alcohol_orders', JSON.stringify(updated));\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  /* ========= PDF: tabla con Ítem, Precio, Fecha, Hora, Tipo + TOTAL ========= */\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF('p', 'pt');\r\n    const ahora = new Date();\r\n    const fechaDescarga = ahora.toLocaleString();\r\n\r\n    // Encabezado\r\n    doc.setFontSize(16);\r\n    doc.text('Historial de Ventas - Bar', 40, 40);\r\n    doc.setFontSize(10);\r\n    doc.text(`Generado: ${fechaDescarga}`, 40, 58);\r\n\r\n    // Histórico\r\n    const entries = Array.isArray(ledger.entries) ? ledger.entries : [];\r\n    const sorted = [...entries].sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp));\r\n\r\n    const rows = sorted.map((e) => [\r\n      e.name,\r\n      `$ ${money(e.price)}`,\r\n      fecha(e.timestamp),\r\n      hora(e.timestamp),\r\n      tipoHumano(e),\r\n    ]);\r\n\r\n    const total = sorted.reduce((acc, e) => acc + (Number(e.price) || 0), 0);\r\n\r\n    doc.autoTable({\r\n      startY: 80,\r\n      head: [['Ítem', 'Precio', 'Fecha', 'Hora', 'Tipo']],\r\n      body: rows,\r\n      styles: { fontSize: 10, cellPadding: 6 },\r\n      headStyles: { fillColor: [60, 80, 255] },\r\n      columnStyles: {\r\n        0: { cellWidth: 220 },\r\n        1: { halign: 'right', cellWidth: 80 },\r\n        2: { cellWidth: 90 },\r\n        3: { cellWidth: 70 },\r\n        4: { cellWidth: 90 },\r\n      },\r\n      foot: [[{ content: 'TOTAL', colSpan: 1 }, { content: `$ ${money(total)}`, styles: { halign: 'right' } }, { content: '', colSpan: 3 }]],\r\n      footStyles: { fillColor: [240, 240, 240], textColor: [0, 0, 0], fontStyle: 'bold' },\r\n      didParseCell: (data) => {\r\n        if (data.section === 'foot' && data.column.index > 1) data.cell.text = [''];\r\n      },\r\n    });\r\n\r\n    doc.save(`ventas_bar_${ahora.toISOString().slice(0, 10)}.pdf`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"bartender-interface\">\r\n      <h1>Pedidos del Bar</h1>\r\n\r\n      <div className=\"pedidos-grid\">\r\n        {/* Pendientes */}\r\n        <div className=\"columna\">\r\n          <h2>Pedidos Pendientes ({orders.filter((o) => !o.completed).length})</h2>\r\n          {orders\r\n            .filter((o) => !o.completed)\r\n            .map((order, idx) => (\r\n              <div key={`${order.id}-pend-${idx}`} className=\"pedido-card pendiente\">\r\n                <div className=\"pedido-header\">\r\n                  <strong>Mesa {order.table ?? order.mesa}</strong>\r\n                  <span>{order.time ?? new Date(order.timestamp).toLocaleTimeString()}</span>\r\n                </div>\r\n                <div className=\"pedido-items\">\r\n                  {order.items?.map((item, i) => (\r\n                    <div key={`${order.id}-item-${i}`}>\r\n                      {item.name} {item.size ? `(${item.size})` : ''}\r\n                      {item.category === 'botellas' ? ` x${item.quantity || 1}` : ''}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n                <button className=\"btn-completar\" onClick={() => markAsCompleted(order.id)}>\r\n                  Marcar como Completado\r\n                </button>\r\n              </div>\r\n            ))}\r\n        </div>\r\n\r\n        {/* Completados */}\r\n        <div className=\"columna\">\r\n          <h2>Pedidos Completados ({orders.filter((o) => o.completed).length})</h2>\r\n          {orders\r\n            .filter((o) => o.completed)\r\n            .map((order, idx) => (\r\n              <div key={`${order.id}-comp-${idx}`} className=\"pedido-card completado\">\r\n                <div className=\"pedido-header\">\r\n                  <strong>Mesa {order.table ?? order.mesa}</strong>\r\n                  <span>{order.time ?? new Date(order.timestamp).toLocaleTimeString()}</span>\r\n                </div>\r\n                <div className=\"pedido-items\">\r\n                  {order.items?.map((item, i) => (\r\n                    <div key={`${order.id}-compitem-${i}`}>\r\n                      {item.name} {item.size ? `(${item.size})` : ''}\r\n                      {item.category === 'botellas' ? ` x${item.quantity || 1}` : ''}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          {orders.some((o) => o.completed) && (\r\n            <button className=\"btn-eliminar\" onClick={clearCompletedOrders}>\r\n              🗑 Eliminar todas las completadas\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={() => setShowStats((s) => !s)}>\r\n        {showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'}\r\n      </button>\r\n\r\n      {showStats && (\r\n        <div className=\"stats\">\r\n          <h3>Resumen de Ventas (Histórico)</h3>\r\n          <p>Simples: {statsLedger.simples}</p>\r\n          <p>Dobles: {statsLedger.dobles}</p>\r\n          <p>Triples: {statsLedger.triples}</p>\r\n          <p>Botellas: {statsLedger.botellas}</p>\r\n          <p>\r\n            <strong>Total: ${statsLedger.amount.toFixed(2)}</strong>\r\n          </p>\r\n\r\n          <button style={{ marginTop: 12 }} onClick={downloadPDF}>\r\n            📄 Descargar historial en PDF\r\n          </button>\r\n\r\n          <details style={{ marginTop: 12 }}>\r\n            <summary>Comparar con ventas abiertas (en vivo)</summary>\r\n            <p>Simples (vivo): {statsLive.simples}</p>\r\n            <p>Dobles (vivo): {statsLive.dobles}</p>\r\n            <p>Triples (vivo): {statsLive.triples}</p>\r\n            <p>Botellas (vivo): {statsLive.botellas}</p>\r\n            <p>\r\n              <strong>Total (vivo): ${statsLive.total.toFixed(2)}</strong>\r\n            </p>\r\n          </details>\r\n\r\n          <button className=\"remove-button\" style={{ marginTop: 12 }} onClick={resetLedger}>\r\n            Reiniciar resumen histórico\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bartender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}