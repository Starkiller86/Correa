{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\karen\\\\OneDrive\\\\Escritorio\\\\Correa3\\\\coorrea\\\\Correa\\\\client\\\\src\\\\pages\\\\Bartender.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport { initBarSocket } from '../services/BarSocket';\nimport jsPDF from 'jspdf';\nimport './bartender.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LEDGER_KEY = 'alcohol_sales_ledger_v1';\n\n/* ===================== Helpers deduplicaciÃ³n ===================== */\n// Firma estable del pedido (mesa + timestamp truncado + items)\nconst orderSignature = o => {\n  var _o$table;\n  return JSON.stringify({\n    t: (_o$table = o.table) !== null && _o$table !== void 0 ? _o$table : o.mesa,\n    ts: (o.timestamp || '').slice(0, 19),\n    // hasta segundos\n    items: (o.items || o.pedidos || []).map(it => ({\n      n: it === null || it === void 0 ? void 0 : it.name,\n      s: (it === null || it === void 0 ? void 0 : it.size) || '',\n      q: (it === null || it === void 0 ? void 0 : it.quantity) || 1,\n      c: ((it === null || it === void 0 ? void 0 : it.category) || '').toLowerCase(),\n      p: Number(it === null || it === void 0 ? void 0 : it.price) || 0\n    }))\n  });\n};\n\n// Dedup por id y por firma; preserva flag \"completed\"\nconst dedupOrders = (arr = []) => {\n  const byId = new Map();\n  const signatures = new Map(); // sig -> id (para fusionar completed)\n\n  for (const raw of arr) {\n    if (!raw) continue;\n    // Solo pedidos del bar\n    if (((raw === null || raw === void 0 ? void 0 : raw.source) || 'bar') !== 'bar') continue;\n    const o = {\n      ...raw,\n      completed: !!raw.completed\n    };\n    const sig = orderSignature(o);\n\n    // Si ya tenemos la firma, fusiona completed y salta\n    if (signatures.has(sig)) {\n      const existingId = signatures.get(sig);\n      const existing = byId.get(existingId);\n      if (existing) existing.completed = existing.completed || o.completed;\n      continue;\n    }\n\n    // Si ya existe por id, fusiona (conserva completed)\n    if (byId.has(o.id)) {\n      const prev = byId.get(o.id);\n      byId.set(o.id, {\n        ...prev,\n        ...o,\n        completed: prev.completed || o.completed\n      });\n    } else {\n      byId.set(o.id, o);\n    }\n\n    // Marca firma\n    if (!signatures.has(sig)) signatures.set(sig, o.id);\n  }\n  return [...byId.values()];\n};\n/* ================================================================ */\n\nfunction loadLedger() {\n  try {\n    const raw = localStorage.getItem(LEDGER_KEY);\n    if (!raw) {\n      return {\n        processedOrderIds: {},\n        totals: {\n          simples: 0,\n          dobles: 0,\n          triples: 0,\n          botellas: 0,\n          amount: 0\n        }\n      };\n    }\n    const parsed = JSON.parse(raw);\n    return {\n      processedOrderIds: parsed.processedOrderIds || {},\n      totals: parsed.totals || {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      }\n    };\n  } catch {\n    return {\n      processedOrderIds: {},\n      totals: {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      }\n    };\n  }\n}\nfunction saveLedger(ledger) {\n  localStorage.setItem(LEDGER_KEY, JSON.stringify(ledger));\n}\nconst Bartender = () => {\n  _s();\n  const [orders, setOrders] = useState([]);\n  const [ledger, setLedger] = useState(loadLedger());\n  const [showStats, setShowStats] = useState(false);\n\n  // Cargar SOLO pedidos del bar + PURGAR duplicados\n  useEffect(() => {\n    const saved = localStorage.getItem('alcohol_orders');\n    if (saved) {\n      try {\n        const parsed = JSON.parse(saved).filter(o => ((o === null || o === void 0 ? void 0 : o.source) || 'bar') === 'bar');\n        const clean = dedupOrders(parsed); // ðŸ‘ˆ dedup fuerte\n        localStorage.setItem('alcohol_orders', JSON.stringify(clean));\n        setOrders(clean);\n        foldOrdersIntoLedger(clean);\n      } catch {}\n    }\n  }, []);\n\n  // WS del bar con merge anti-duplicados\n  useEffect(() => {\n    const mergeUnique = incoming => {\n      const onlyBar = (incoming || []).filter(o => ((o === null || o === void 0 ? void 0 : o.source) || 'bar') === 'bar');\n      if (!onlyBar.length) return;\n      setOrders(prev => {\n        const next = dedupOrders([...prev, ...onlyBar]); // ðŸ‘ˆ dedup fuerte\n        localStorage.setItem('alcohol_orders', JSON.stringify(next));\n        return next;\n      });\n\n      // Plegamos al ledger solo lo nuevo (da igual si estaban duplicados, se filtra con processed ids)\n      foldOrdersIntoLedger(onlyBar);\n    };\n    initBarSocket(mergeUnique);\n  }, []);\n\n  // Sync entre pestaÃ±as (tambiÃ©n dedup)\n  useEffect(() => {\n    const onStorage = e => {\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\n        try {\n          const parsed = JSON.parse(e.newValue).filter(o => ((o === null || o === void 0 ? void 0 : o.source) || 'bar') === 'bar');\n          const clean = dedupOrders(parsed); // ðŸ‘ˆ dedup fuerte\n          setOrders(clean);\n          foldOrdersIntoLedger(clean);\n        } catch {}\n      }\n    };\n    window.addEventListener('storage', onStorage);\n    return () => window.removeEventListener('storage', onStorage);\n  }, []);\n\n  // Ledger\n  const foldOrdersIntoLedger = ordersArr => {\n    if (!Array.isArray(ordersArr) || ordersArr.length === 0) return;\n    setLedger(prev => {\n      const next = {\n        processedOrderIds: {\n          ...prev.processedOrderIds\n        },\n        totals: {\n          ...prev.totals\n        }\n      };\n      let changed = false;\n      for (const order of ordersArr) {\n        var _ref, _order$items;\n        if (!(order !== null && order !== void 0 && order.id) || ((order === null || order === void 0 ? void 0 : order.source) || 'bar') !== 'bar' || next.processedOrderIds[order.id]) continue;\n        const items = (_ref = (_order$items = order.items) !== null && _order$items !== void 0 ? _order$items : order.pedidos) !== null && _ref !== void 0 ? _ref : [];\n        for (const it of items) {\n          const size = (it.size || 'simple').toLowerCase();\n          const category = (it.category || '').toLowerCase();\n          const price = Number(it.price) || 0;\n          if (category === 'botellas') next.totals.botellas += Number(it.quantity) || 1;else if (size === 'doble') next.totals.dobles += 1;else if (size === 'triple') next.totals.triples += 1;else next.totals.simples += 1;\n          next.totals.amount += price;\n          changed = true;\n        }\n        next.processedOrderIds[order.id] = true;\n      }\n      if (changed) saveLedger(next);\n      return changed ? next : prev;\n    });\n  };\n\n  // Stats en vivo\n  const statsLive = useMemo(() => {\n    let total = 0,\n      simples = 0,\n      dobles = 0,\n      triples = 0,\n      botellas = 0;\n    for (const order of orders) {\n      var _ref2, _order$items2;\n      const items = (_ref2 = (_order$items2 = order.items) !== null && _order$items2 !== void 0 ? _order$items2 : order.pedidos) !== null && _ref2 !== void 0 ? _ref2 : [];\n      for (const it of items) {\n        const size = (it.size || 'simple').toLowerCase();\n        const category = (it.category || '').toLowerCase();\n        const price = Number(it.price) || 0;\n        if (category === 'botellas') botellas += Number(it.quantity) || 1;else if (size === 'doble') dobles++;else if (size === 'triple') triples++;else simples++;\n        total += price;\n      }\n    }\n    return {\n      total,\n      simples,\n      dobles,\n      triples,\n      botellas\n    };\n  }, [orders]);\n  const statsLedger = ledger.totals;\n  const resetLedger = () => {\n    const empty = {\n      processedOrderIds: {},\n      totals: {\n        simples: 0,\n        dobles: 0,\n        triples: 0,\n        botellas: 0,\n        amount: 0\n      }\n    };\n    setLedger(empty);\n    saveLedger(empty);\n  };\n  const markAsCompleted = orderId => {\n    setOrders(prev => {\n      const updated = prev.map(o => o.id === orderId ? {\n        ...o,\n        completed: true\n      } : o);\n      localStorage.setItem('alcohol_orders', JSON.stringify(updated));\n      return updated;\n    });\n  };\n  const clearCompletedOrders = () => {\n    setOrders(prev => {\n      const updated = prev.filter(o => !o.completed);\n      localStorage.setItem('alcohol_orders', JSON.stringify(updated));\n      return updated;\n    });\n  };\n  const downloadPDF = () => {\n    const doc = new jsPDF();\n    doc.setFontSize(16);\n    doc.text('Historial de Ventas - Bar', 10, 10);\n    doc.setFontSize(12);\n    doc.text(`Simples: ${statsLedger.simples}`, 10, 20);\n    doc.text(`Dobles: ${statsLedger.dobles}`, 10, 30);\n    doc.text(`Triples: ${statsLedger.triples}`, 10, 40);\n    doc.text(`Botellas: ${statsLedger.botellas}`, 10, 50);\n    doc.text(`Total vendido: $${statsLedger.amount.toFixed(2)}`, 10, 60);\n    doc.save('historial_ventas_bar.pdf');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bartender-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Pedidos del Bar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pedidos-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columna\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Pedidos Pendientes (\", orders.filter(o => !o.completed).length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), orders.filter(o => !o.completed).map((order, idx) => {\n          var _order$table, _order$time, _order$items3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pedido-card pendiente\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pedido-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Mesa \", (_order$table = order.table) !== null && _order$table !== void 0 ? _order$table : order.mesa]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_order$time = order.time) !== null && _order$time !== void 0 ? _order$time : new Date(order.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pedido-items\",\n              children: (_order$items3 = order.items) === null || _order$items3 === void 0 ? void 0 : _order$items3.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [item.name, \" \", item.size ? `(${item.size})` : '', item.category === 'botellas' ? ` x${item.quantity || 1}` : '']\n              }, `${order.id}-item-${i}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-completar\",\n              onClick: () => markAsCompleted(order.id),\n              children: \"Marcar como Completado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, `${order.id}-pend-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"columna\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Pedidos Completados (\", orders.filter(o => o.completed).length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), orders.filter(o => o.completed).map((order, idx) => {\n          var _order$table2, _order$time2, _order$items4;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pedido-card completado\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pedido-header\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Mesa \", (_order$table2 = order.table) !== null && _order$table2 !== void 0 ? _order$table2 : order.mesa]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (_order$time2 = order.time) !== null && _order$time2 !== void 0 ? _order$time2 : new Date(order.timestamp).toLocaleTimeString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pedido-items\",\n              children: (_order$items4 = order.items) === null || _order$items4 === void 0 ? void 0 : _order$items4.map((item, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [item.name, \" \", item.size ? `(${item.size})` : '', item.category === 'botellas' ? ` x${item.quantity || 1}` : '']\n              }, `${order.id}-compitem-${i}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this)]\n          }, `${order.id}-comp-${idx}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this);\n        }), orders.some(o => o.completed) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-eliminar\",\n          onClick: clearCompletedOrders,\n          children: \"\\uD83D\\uDDD1 Eliminar todas las completadas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowStats(s => !s),\n      children: showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), showStats && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Resumen de Ventas (Hist\\xF3rico)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Simples: \", statsLedger.simples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dobles: \", statsLedger.dobles]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Triples: \", statsLedger.triples]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Botellas: \", statsLedger.botellas]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Total: $\", statsLedger.amount.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginTop: 12\n        },\n        onClick: downloadPDF,\n        children: \"\\uD83D\\uDCC4 Descargar historial en PDF\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"details\", {\n        style: {\n          marginTop: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"summary\", {\n          children: \"Comparar con ventas abiertas (en vivo)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Simples (vivo): \", statsLive.simples]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Dobles (vivo): \", statsLive.dobles]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Triples (vivo): \", statsLive.triples]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Botellas (vivo): \", statsLive.botellas]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Total (vivo): $\", statsLive.total.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"remove-button\",\n        style: {\n          marginTop: 12\n        },\n        onClick: resetLedger,\n        children: \"Reiniciar resumen hist\\xF3rico\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this);\n};\n_s(Bartender, \"Sn1OyphKlUMDjppEPlNeoqH3OJw=\");\n_c = Bartender;\nexport default Bartender;\nvar _c;\n$RefreshReg$(_c, \"Bartender\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","initBarSocket","jsPDF","jsxDEV","_jsxDEV","LEDGER_KEY","orderSignature","o","_o$table","JSON","stringify","t","table","mesa","ts","timestamp","slice","items","pedidos","map","it","n","name","s","size","q","quantity","c","category","toLowerCase","p","Number","price","dedupOrders","arr","byId","Map","signatures","raw","source","completed","sig","has","existingId","get","existing","id","prev","set","values","loadLedger","localStorage","getItem","processedOrderIds","totals","simples","dobles","triples","botellas","amount","parsed","parse","saveLedger","ledger","setItem","Bartender","_s","orders","setOrders","setLedger","showStats","setShowStats","saved","filter","clean","foldOrdersIntoLedger","mergeUnique","incoming","onlyBar","length","next","onStorage","e","key","newValue","window","addEventListener","removeEventListener","ordersArr","Array","isArray","changed","order","_ref","_order$items","statsLive","total","_ref2","_order$items2","statsLedger","resetLedger","empty","markAsCompleted","orderId","updated","clearCompletedOrders","downloadPDF","doc","setFontSize","text","toFixed","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","idx","_order$table","_order$time","_order$items3","time","Date","toLocaleTimeString","item","i","onClick","_order$table2","_order$time2","_order$items4","some","style","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/karen/OneDrive/Escritorio/Correa3/coorrea/Correa/client/src/pages/Bartender.jsx"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\r\nimport { initBarSocket } from '../services/BarSocket';\r\nimport jsPDF from 'jspdf';\r\nimport './bartender.css';\r\n\r\nconst LEDGER_KEY = 'alcohol_sales_ledger_v1';\r\n\r\n/* ===================== Helpers deduplicaciÃ³n ===================== */\r\n// Firma estable del pedido (mesa + timestamp truncado + items)\r\nconst orderSignature = (o) => JSON.stringify({\r\n  t: o.table ?? o.mesa,\r\n  ts: (o.timestamp || '').slice(0, 19), // hasta segundos\r\n  items: (o.items || o.pedidos || []).map(it => ({\r\n    n: it?.name,\r\n    s: it?.size || '',\r\n    q: it?.quantity || 1,\r\n    c: (it?.category || '').toLowerCase(),\r\n    p: Number(it?.price) || 0,\r\n  })),\r\n});\r\n\r\n// Dedup por id y por firma; preserva flag \"completed\"\r\nconst dedupOrders = (arr = []) => {\r\n  const byId = new Map();\r\n  const signatures = new Map(); // sig -> id (para fusionar completed)\r\n\r\n  for (const raw of arr) {\r\n    if (!raw) continue;\r\n    // Solo pedidos del bar\r\n    if ((raw?.source || 'bar') !== 'bar') continue;\r\n\r\n    const o = { ...raw, completed: !!raw.completed };\r\n    const sig = orderSignature(o);\r\n\r\n    // Si ya tenemos la firma, fusiona completed y salta\r\n    if (signatures.has(sig)) {\r\n      const existingId = signatures.get(sig);\r\n      const existing = byId.get(existingId);\r\n      if (existing) existing.completed = existing.completed || o.completed;\r\n      continue;\r\n    }\r\n\r\n    // Si ya existe por id, fusiona (conserva completed)\r\n    if (byId.has(o.id)) {\r\n      const prev = byId.get(o.id);\r\n      byId.set(o.id, { ...prev, ...o, completed: prev.completed || o.completed });\r\n    } else {\r\n      byId.set(o.id, o);\r\n    }\r\n\r\n    // Marca firma\r\n    if (!signatures.has(sig)) signatures.set(sig, o.id);\r\n  }\r\n\r\n  return [...byId.values()];\r\n};\r\n/* ================================================================ */\r\n\r\nfunction loadLedger() {\r\n  try {\r\n    const raw = localStorage.getItem(LEDGER_KEY);\r\n    if (!raw) {\r\n      return { processedOrderIds: {}, totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 } };\r\n    }\r\n    const parsed = JSON.parse(raw);\r\n    return {\r\n      processedOrderIds: parsed.processedOrderIds || {},\r\n      totals: parsed.totals || { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 },\r\n    };\r\n  } catch {\r\n    return { processedOrderIds: {}, totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 } };\r\n  }\r\n}\r\n\r\nfunction saveLedger(ledger) {\r\n  localStorage.setItem(LEDGER_KEY, JSON.stringify(ledger));\r\n}\r\n\r\nconst Bartender = () => {\r\n  const [orders, setOrders] = useState([]);\r\n  const [ledger, setLedger] = useState(loadLedger());\r\n  const [showStats, setShowStats] = useState(false);\r\n\r\n  // Cargar SOLO pedidos del bar + PURGAR duplicados\r\n  useEffect(() => {\r\n    const saved = localStorage.getItem('alcohol_orders');\r\n    if (saved) {\r\n      try {\r\n        const parsed = JSON.parse(saved).filter(o => (o?.source || 'bar') === 'bar');\r\n        const clean = dedupOrders(parsed); // ðŸ‘ˆ dedup fuerte\r\n        localStorage.setItem('alcohol_orders', JSON.stringify(clean));\r\n        setOrders(clean);\r\n        foldOrdersIntoLedger(clean);\r\n      } catch {}\r\n    }\r\n  }, []);\r\n\r\n  // WS del bar con merge anti-duplicados\r\n  useEffect(() => {\r\n    const mergeUnique = (incoming) => {\r\n      const onlyBar = (incoming || []).filter(o => (o?.source || 'bar') === 'bar');\r\n      if (!onlyBar.length) return;\r\n\r\n      setOrders((prev) => {\r\n        const next = dedupOrders([...prev, ...onlyBar]); // ðŸ‘ˆ dedup fuerte\r\n        localStorage.setItem('alcohol_orders', JSON.stringify(next));\r\n        return next;\r\n      });\r\n\r\n      // Plegamos al ledger solo lo nuevo (da igual si estaban duplicados, se filtra con processed ids)\r\n      foldOrdersIntoLedger(onlyBar);\r\n    };\r\n    initBarSocket(mergeUnique);\r\n  }, []);\r\n\r\n  // Sync entre pestaÃ±as (tambiÃ©n dedup)\r\n  useEffect(() => {\r\n    const onStorage = (e) => {\r\n      if (e.key === 'alcohol_orders' && typeof e.newValue === 'string') {\r\n        try {\r\n          const parsed = JSON.parse(e.newValue).filter(o => (o?.source || 'bar') === 'bar');\r\n          const clean = dedupOrders(parsed); // ðŸ‘ˆ dedup fuerte\r\n          setOrders(clean);\r\n          foldOrdersIntoLedger(clean);\r\n        } catch {}\r\n      }\r\n    };\r\n    window.addEventListener('storage', onStorage);\r\n    return () => window.removeEventListener('storage', onStorage);\r\n  }, []);\r\n\r\n  // Ledger\r\n  const foldOrdersIntoLedger = (ordersArr) => {\r\n    if (!Array.isArray(ordersArr) || ordersArr.length === 0) return;\r\n    setLedger((prev) => {\r\n      const next = {\r\n        processedOrderIds: { ...prev.processedOrderIds },\r\n        totals: { ...prev.totals },\r\n      };\r\n      let changed = false;\r\n      for (const order of ordersArr) {\r\n        if (!order?.id || (order?.source || 'bar') !== 'bar' || next.processedOrderIds[order.id]) continue;\r\n        const items = order.items ?? order.pedidos ?? [];\r\n        for (const it of items) {\r\n          const size = (it.size || 'simple').toLowerCase();\r\n          const category = (it.category || '').toLowerCase();\r\n          const price = Number(it.price) || 0;\r\n          if (category === 'botellas') next.totals.botellas += Number(it.quantity) || 1;\r\n          else if (size === 'doble')   next.totals.dobles += 1;\r\n          else if (size === 'triple')  next.totals.triples += 1;\r\n          else                         next.totals.simples += 1;\r\n          next.totals.amount += price;\r\n          changed = true;\r\n        }\r\n        next.processedOrderIds[order.id] = true;\r\n      }\r\n      if (changed) saveLedger(next);\r\n      return changed ? next : prev;\r\n    });\r\n  };\r\n\r\n  // Stats en vivo\r\n  const statsLive = useMemo(() => {\r\n    let total = 0, simples = 0, dobles = 0, triples = 0, botellas = 0;\r\n    for (const order of orders) {\r\n      const items = order.items ?? order.pedidos ?? [];\r\n      for (const it of items) {\r\n        const size = (it.size || 'simple').toLowerCase();\r\n        const category = (it.category || '').toLowerCase();\r\n        const price = Number(it.price) || 0;\r\n        if (category === 'botellas') botellas += Number(it.quantity) || 1;\r\n        else if (size === 'doble')   dobles++;\r\n        else if (size === 'triple')  triples++;\r\n        else                         simples++;\r\n        total += price;\r\n      }\r\n    }\r\n    return { total, simples, dobles, triples, botellas };\r\n  }, [orders]);\r\n\r\n  const statsLedger = ledger.totals;\r\n\r\n  const resetLedger = () => {\r\n    const empty = { processedOrderIds: {}, totals: { simples: 0, dobles: 0, triples: 0, botellas: 0, amount: 0 } };\r\n    setLedger(empty);\r\n    saveLedger(empty);\r\n  };\r\n\r\n  const markAsCompleted = (orderId) => {\r\n    setOrders(prev => {\r\n      const updated = prev.map(o => o.id === orderId ? { ...o, completed: true } : o);\r\n      localStorage.setItem('alcohol_orders', JSON.stringify(updated));\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const clearCompletedOrders = () => {\r\n    setOrders(prev => {\r\n      const updated = prev.filter(o => !o.completed);\r\n      localStorage.setItem('alcohol_orders', JSON.stringify(updated));\r\n      return updated;\r\n    });\r\n  };\r\n\r\n  const downloadPDF = () => {\r\n    const doc = new jsPDF();\r\n    doc.setFontSize(16);\r\n    doc.text('Historial de Ventas - Bar', 10, 10);\r\n    doc.setFontSize(12);\r\n    doc.text(`Simples: ${statsLedger.simples}`, 10, 20);\r\n    doc.text(`Dobles: ${statsLedger.dobles}`, 10, 30);\r\n    doc.text(`Triples: ${statsLedger.triples}`, 10, 40);\r\n    doc.text(`Botellas: ${statsLedger.botellas}`, 10, 50);\r\n    doc.text(`Total vendido: $${statsLedger.amount.toFixed(2)}`, 10, 60);\r\n    doc.save('historial_ventas_bar.pdf');\r\n  };\r\n\r\n  return (\r\n    <div className=\"bartender-interface\">\r\n      <h1>Pedidos del Bar</h1>\r\n\r\n      <div className=\"pedidos-grid\">\r\n        {/* Pendientes */}\r\n        <div className=\"columna\">\r\n          <h2>Pedidos Pendientes ({orders.filter(o => !o.completed).length})</h2>\r\n          {orders.filter(o => !o.completed).map((order, idx) => (\r\n            <div key={`${order.id}-pend-${idx}`} className=\"pedido-card pendiente\">\r\n              <div className=\"pedido-header\">\r\n                <strong>Mesa {order.table ?? order.mesa}</strong>\r\n                <span>{order.time ?? new Date(order.timestamp).toLocaleTimeString()}</span>\r\n              </div>\r\n              <div className=\"pedido-items\">\r\n                {order.items?.map((item, i) => (\r\n                  <div key={`${order.id}-item-${i}`}>\r\n                    {item.name} {item.size ? `(${item.size})` : ''}\r\n                    {item.category === 'botellas' ? ` x${item.quantity || 1}` : ''}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n              <button className=\"btn-completar\" onClick={() => markAsCompleted(order.id)}>\r\n                Marcar como Completado\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Completados */}\r\n        <div className=\"columna\">\r\n          <h2>Pedidos Completados ({orders.filter(o => o.completed).length})</h2>\r\n          {orders.filter(o => o.completed).map((order, idx) => (\r\n            <div key={`${order.id}-comp-${idx}`} className=\"pedido-card completado\">\r\n              <div className=\"pedido-header\">\r\n                <strong>Mesa {order.table ?? order.mesa}</strong>\r\n                <span>{order.time ?? new Date(order.timestamp).toLocaleTimeString()}</span>\r\n              </div>\r\n              <div className=\"pedido-items\">\r\n                {order.items?.map((item, i) => (\r\n                  <div key={`${order.id}-compitem-${i}`}>\r\n                    {item.name} {item.size ? `(${item.size})` : ''}\r\n                    {item.category === 'botellas' ? ` x${item.quantity || 1}` : ''}\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {orders.some(o => o.completed) && (\r\n            <button className=\"btn-eliminar\" onClick={clearCompletedOrders}>\r\n              ðŸ—‘ Eliminar todas las completadas\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      <button onClick={() => setShowStats(s => !s)}>\r\n        {showStats ? 'Ocultar resumen de ventas' : 'Mostrar resumen de ventas'}\r\n      </button>\r\n\r\n      {showStats && (\r\n        <div className=\"stats\">\r\n          <h3>Resumen de Ventas (HistÃ³rico)</h3>\r\n          <p>Simples: {statsLedger.simples}</p>\r\n          <p>Dobles: {statsLedger.dobles}</p>\r\n          <p>Triples: {statsLedger.triples}</p>\r\n          <p>Botellas: {statsLedger.botellas}</p>\r\n          <p><strong>Total: ${statsLedger.amount.toFixed(2)}</strong></p>\r\n          <button style={{ marginTop: 12 }} onClick={downloadPDF}>ðŸ“„ Descargar historial en PDF</button>\r\n          <details style={{ marginTop: 12 }}>\r\n            <summary>Comparar con ventas abiertas (en vivo)</summary>\r\n            <p>Simples (vivo): {statsLive.simples}</p>\r\n            <p>Dobles (vivo): {statsLive.dobles}</p>\r\n            <p>Triples (vivo): {statsLive.triples}</p>\r\n            <p>Botellas (vivo): {statsLive.botellas}</p>\r\n            <p><strong>Total (vivo): ${statsLive.total.toFixed(2)}</strong></p>\r\n          </details>\r\n          <button className=\"remove-button\" style={{ marginTop: 12 }} onClick={resetLedger}>\r\n            Reiniciar resumen histÃ³rico\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Bartender;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}